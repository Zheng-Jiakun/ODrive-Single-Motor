ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKo0yXJ.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_ADC1_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_ADC1_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_ADC1_Init:
  26              	.LFB130:
  27              		.file 1 "Src/adc.c"
   1:Src/adc.c     **** /**
   2:Src/adc.c     ****   ******************************************************************************
   3:Src/adc.c     ****   * File Name          : ADC.c
   4:Src/adc.c     ****   * Description        : This file provides code for the configuration
   5:Src/adc.c     ****   *                      of the ADC instances.
   6:Src/adc.c     ****   ******************************************************************************
   7:Src/adc.c     ****   * @attention
   8:Src/adc.c     ****   *
   9:Src/adc.c     ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Src/adc.c     ****   * All rights reserved.</center></h2>
  11:Src/adc.c     ****   *
  12:Src/adc.c     ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/adc.c     ****   * the "License"; You may not use this file except in compliance with the
  14:Src/adc.c     ****   * License. You may obtain a copy of the License at:
  15:Src/adc.c     ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/adc.c     ****   *
  17:Src/adc.c     ****   ******************************************************************************
  18:Src/adc.c     ****   */
  19:Src/adc.c     **** 
  20:Src/adc.c     **** /* Includes ------------------------------------------------------------------*/
  21:Src/adc.c     **** #include "adc.h"
  22:Src/adc.c     **** 
  23:Src/adc.c     **** /* USER CODE BEGIN 0 */
  24:Src/adc.c     **** 
  25:Src/adc.c     **** /* USER CODE END 0 */
  26:Src/adc.c     **** 
  27:Src/adc.c     **** ADC_HandleTypeDef hadc1;
  28:Src/adc.c     **** DMA_HandleTypeDef hdma_adc1;
  29:Src/adc.c     **** 
  30:Src/adc.c     **** /* ADC1 init function */
  31:Src/adc.c     **** void MX_ADC1_Init(void)
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKo0yXJ.s 			page 2


  32:Src/adc.c     **** {
  28              		.loc 1 32 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 00B5     		push	{lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
  36 0002 85B0     		sub	sp, sp, #20
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 24
  33:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig = {0};
  39              		.loc 1 33 0
  40 0004 0023     		movs	r3, #0
  41 0006 0093     		str	r3, [sp]
  42 0008 0193     		str	r3, [sp, #4]
  43 000a 0293     		str	r3, [sp, #8]
  44 000c 0393     		str	r3, [sp, #12]
  34:Src/adc.c     **** 
  35:Src/adc.c     ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
  36:Src/adc.c     ****   */
  37:Src/adc.c     ****   hadc1.Instance = ADC1;
  45              		.loc 1 37 0
  46 000e 1B48     		ldr	r0, .L9
  47 0010 1B4A     		ldr	r2, .L9+4
  48 0012 0260     		str	r2, [r0]
  38:Src/adc.c     ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
  49              		.loc 1 38 0
  50 0014 4360     		str	r3, [r0, #4]
  39:Src/adc.c     ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
  51              		.loc 1 39 0
  52 0016 8360     		str	r3, [r0, #8]
  40:Src/adc.c     ****   hadc1.Init.ScanConvMode = ENABLE;
  53              		.loc 1 40 0
  54 0018 0122     		movs	r2, #1
  55 001a 0261     		str	r2, [r0, #16]
  41:Src/adc.c     ****   hadc1.Init.ContinuousConvMode = ENABLE;
  56              		.loc 1 41 0
  57 001c 0276     		strb	r2, [r0, #24]
  42:Src/adc.c     ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  58              		.loc 1 42 0
  59 001e 80F82030 		strb	r3, [r0, #32]
  43:Src/adc.c     ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  60              		.loc 1 43 0
  61 0022 C362     		str	r3, [r0, #44]
  44:Src/adc.c     ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  62              		.loc 1 44 0
  63 0024 1749     		ldr	r1, .L9+8
  64 0026 8162     		str	r1, [r0, #40]
  45:Src/adc.c     ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  65              		.loc 1 45 0
  66 0028 C360     		str	r3, [r0, #12]
  46:Src/adc.c     ****   hadc1.Init.NbrOfConversion = 2;
  67              		.loc 1 46 0
  68 002a 0223     		movs	r3, #2
  69 002c C361     		str	r3, [r0, #28]
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKo0yXJ.s 			page 3


  47:Src/adc.c     ****   hadc1.Init.DMAContinuousRequests = ENABLE;
  70              		.loc 1 47 0
  71 002e 80F83020 		strb	r2, [r0, #48]
  48:Src/adc.c     ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  72              		.loc 1 48 0
  73 0032 4261     		str	r2, [r0, #20]
  49:Src/adc.c     ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
  74              		.loc 1 49 0
  75 0034 FFF7FEFF 		bl	HAL_ADC_Init
  76              	.LVL0:
  77 0038 B0B9     		cbnz	r0, .L6
  78              	.L2:
  50:Src/adc.c     ****   {
  51:Src/adc.c     ****     Error_Handler();
  52:Src/adc.c     ****   }
  53:Src/adc.c     ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
  54:Src/adc.c     ****   */
  55:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_2;
  79              		.loc 1 55 0
  80 003a 0223     		movs	r3, #2
  81 003c 0093     		str	r3, [sp]
  56:Src/adc.c     ****   sConfig.Rank = 1;
  82              		.loc 1 56 0
  83 003e 0123     		movs	r3, #1
  84 0040 0193     		str	r3, [sp, #4]
  57:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
  85              		.loc 1 57 0
  86 0042 0023     		movs	r3, #0
  87 0044 0293     		str	r3, [sp, #8]
  58:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
  88              		.loc 1 58 0
  89 0046 6946     		mov	r1, sp
  90 0048 0C48     		ldr	r0, .L9
  91 004a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
  92              	.LVL1:
  93 004e 70B9     		cbnz	r0, .L7
  94              	.L3:
  59:Src/adc.c     ****   {
  60:Src/adc.c     ****     Error_Handler();
  61:Src/adc.c     ****   }
  62:Src/adc.c     ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
  63:Src/adc.c     ****   */
  64:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_14;
  95              		.loc 1 64 0
  96 0050 0E23     		movs	r3, #14
  97 0052 0093     		str	r3, [sp]
  65:Src/adc.c     ****   sConfig.Rank = 2;
  98              		.loc 1 65 0
  99 0054 0223     		movs	r3, #2
 100 0056 0193     		str	r3, [sp, #4]
  66:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 101              		.loc 1 66 0
 102 0058 6946     		mov	r1, sp
 103 005a 0848     		ldr	r0, .L9
 104 005c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 105              	.LVL2:
 106 0060 40B9     		cbnz	r0, .L8
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKo0yXJ.s 			page 4


 107              	.L1:
  67:Src/adc.c     ****   {
  68:Src/adc.c     ****     Error_Handler();
  69:Src/adc.c     ****   }
  70:Src/adc.c     **** 
  71:Src/adc.c     **** }
 108              		.loc 1 71 0
 109 0062 05B0     		add	sp, sp, #20
 110              	.LCFI2:
 111              		.cfi_remember_state
 112              		.cfi_def_cfa_offset 4
 113              		@ sp needed
 114 0064 5DF804FB 		ldr	pc, [sp], #4
 115              	.L6:
 116              	.LCFI3:
 117              		.cfi_restore_state
  51:Src/adc.c     ****   }
 118              		.loc 1 51 0
 119 0068 FFF7FEFF 		bl	Error_Handler
 120              	.LVL3:
 121 006c E5E7     		b	.L2
 122              	.L7:
  60:Src/adc.c     ****   }
 123              		.loc 1 60 0
 124 006e FFF7FEFF 		bl	Error_Handler
 125              	.LVL4:
 126 0072 EDE7     		b	.L3
 127              	.L8:
  68:Src/adc.c     ****   }
 128              		.loc 1 68 0
 129 0074 FFF7FEFF 		bl	Error_Handler
 130              	.LVL5:
 131              		.loc 1 71 0
 132 0078 F3E7     		b	.L1
 133              	.L10:
 134 007a 00BF     		.align	2
 135              	.L9:
 136 007c 00000000 		.word	hadc1
 137 0080 00200140 		.word	1073815552
 138 0084 0100000F 		.word	251658241
 139              		.cfi_endproc
 140              	.LFE130:
 142              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 143              		.align	1
 144              		.global	HAL_ADC_MspInit
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv4-sp-d16
 150              	HAL_ADC_MspInit:
 151              	.LFB131:
  72:Src/adc.c     **** 
  73:Src/adc.c     **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
  74:Src/adc.c     **** {
 152              		.loc 1 74 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 32
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKo0yXJ.s 			page 5


 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              	.LVL6:
 157 0000 70B5     		push	{r4, r5, r6, lr}
 158              	.LCFI4:
 159              		.cfi_def_cfa_offset 16
 160              		.cfi_offset 4, -16
 161              		.cfi_offset 5, -12
 162              		.cfi_offset 6, -8
 163              		.cfi_offset 14, -4
 164 0002 88B0     		sub	sp, sp, #32
 165              	.LCFI5:
 166              		.cfi_def_cfa_offset 48
  75:Src/adc.c     **** 
  76:Src/adc.c     ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 167              		.loc 1 76 0
 168 0004 0023     		movs	r3, #0
 169 0006 0393     		str	r3, [sp, #12]
 170 0008 0493     		str	r3, [sp, #16]
 171 000a 0593     		str	r3, [sp, #20]
 172 000c 0693     		str	r3, [sp, #24]
 173 000e 0793     		str	r3, [sp, #28]
  77:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 174              		.loc 1 77 0
 175 0010 0268     		ldr	r2, [r0]
 176 0012 03F18043 		add	r3, r3, #1073741824
 177 0016 03F59033 		add	r3, r3, #73728
 178 001a 9A42     		cmp	r2, r3
 179 001c 01D0     		beq	.L15
 180              	.LVL7:
 181              	.L11:
  78:Src/adc.c     ****   {
  79:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 0 */
  80:Src/adc.c     **** 
  81:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 0 */
  82:Src/adc.c     ****     /* ADC1 clock enable */
  83:Src/adc.c     ****     __HAL_RCC_ADC1_CLK_ENABLE();
  84:Src/adc.c     **** 
  85:Src/adc.c     ****     __HAL_RCC_GPIOC_CLK_ENABLE();
  86:Src/adc.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  87:Src/adc.c     ****     /**ADC1 GPIO Configuration
  88:Src/adc.c     ****     PC0     ------> ADC1_IN10
  89:Src/adc.c     ****     PC1     ------> ADC1_IN11
  90:Src/adc.c     ****     PA2     ------> ADC1_IN2
  91:Src/adc.c     ****     PC4     ------> ADC1_IN14
  92:Src/adc.c     ****     PC5     ------> ADC1_IN15
  93:Src/adc.c     ****     */
  94:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5;
  95:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
  96:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  97:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
  98:Src/adc.c     **** 
  99:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_2;
 100:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 101:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 102:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 103:Src/adc.c     **** 
 104:Src/adc.c     ****     /* ADC1 DMA Init */
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKo0yXJ.s 			page 6


 105:Src/adc.c     ****     /* ADC1 Init */
 106:Src/adc.c     ****     hdma_adc1.Instance = DMA2_Stream0;
 107:Src/adc.c     ****     hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 108:Src/adc.c     ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 109:Src/adc.c     ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 110:Src/adc.c     ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 111:Src/adc.c     ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 112:Src/adc.c     ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 113:Src/adc.c     ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 114:Src/adc.c     ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 115:Src/adc.c     ****     hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 116:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 117:Src/adc.c     ****     {
 118:Src/adc.c     ****       Error_Handler();
 119:Src/adc.c     ****     }
 120:Src/adc.c     **** 
 121:Src/adc.c     ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc1);
 122:Src/adc.c     **** 
 123:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 124:Src/adc.c     **** 
 125:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 1 */
 126:Src/adc.c     ****   }
 127:Src/adc.c     **** }
 182              		.loc 1 127 0
 183 001e 08B0     		add	sp, sp, #32
 184              	.LCFI6:
 185              		.cfi_remember_state
 186              		.cfi_def_cfa_offset 16
 187              		@ sp needed
 188 0020 70BD     		pop	{r4, r5, r6, pc}
 189              	.LVL8:
 190              	.L15:
 191              	.LCFI7:
 192              		.cfi_restore_state
 193 0022 0446     		mov	r4, r0
 194              	.LBB2:
  83:Src/adc.c     **** 
 195              		.loc 1 83 0
 196 0024 0025     		movs	r5, #0
 197 0026 0095     		str	r5, [sp]
 198 0028 03F58C33 		add	r3, r3, #71680
 199 002c 5A6C     		ldr	r2, [r3, #68]
 200 002e 42F48072 		orr	r2, r2, #256
 201 0032 5A64     		str	r2, [r3, #68]
 202 0034 5A6C     		ldr	r2, [r3, #68]
 203 0036 02F48072 		and	r2, r2, #256
 204 003a 0092     		str	r2, [sp]
 205 003c 009A     		ldr	r2, [sp]
 206              	.LBE2:
 207              	.LBB3:
  85:Src/adc.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 208              		.loc 1 85 0
 209 003e 0195     		str	r5, [sp, #4]
 210 0040 1A6B     		ldr	r2, [r3, #48]
 211 0042 42F00402 		orr	r2, r2, #4
 212 0046 1A63     		str	r2, [r3, #48]
 213 0048 1A6B     		ldr	r2, [r3, #48]
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKo0yXJ.s 			page 7


 214 004a 02F00402 		and	r2, r2, #4
 215 004e 0192     		str	r2, [sp, #4]
 216 0050 019A     		ldr	r2, [sp, #4]
 217              	.LBE3:
 218              	.LBB4:
  86:Src/adc.c     ****     /**ADC1 GPIO Configuration
 219              		.loc 1 86 0
 220 0052 0295     		str	r5, [sp, #8]
 221 0054 1A6B     		ldr	r2, [r3, #48]
 222 0056 42F00102 		orr	r2, r2, #1
 223 005a 1A63     		str	r2, [r3, #48]
 224 005c 1B6B     		ldr	r3, [r3, #48]
 225 005e 03F00103 		and	r3, r3, #1
 226 0062 0293     		str	r3, [sp, #8]
 227 0064 029B     		ldr	r3, [sp, #8]
 228              	.LBE4:
  94:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 229              		.loc 1 94 0
 230 0066 3323     		movs	r3, #51
 231 0068 0393     		str	r3, [sp, #12]
  95:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 232              		.loc 1 95 0
 233 006a 0326     		movs	r6, #3
 234 006c 0496     		str	r6, [sp, #16]
  97:Src/adc.c     **** 
 235              		.loc 1 97 0
 236 006e 03A9     		add	r1, sp, #12
 237 0070 1448     		ldr	r0, .L17
 238              	.LVL9:
 239 0072 FFF7FEFF 		bl	HAL_GPIO_Init
 240              	.LVL10:
  99:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 241              		.loc 1 99 0
 242 0076 0423     		movs	r3, #4
 243 0078 0393     		str	r3, [sp, #12]
 100:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 244              		.loc 1 100 0
 245 007a 0496     		str	r6, [sp, #16]
 101:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 246              		.loc 1 101 0
 247 007c 0595     		str	r5, [sp, #20]
 102:Src/adc.c     **** 
 248              		.loc 1 102 0
 249 007e 03A9     		add	r1, sp, #12
 250 0080 1148     		ldr	r0, .L17+4
 251 0082 FFF7FEFF 		bl	HAL_GPIO_Init
 252              	.LVL11:
 106:Src/adc.c     ****     hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 253              		.loc 1 106 0
 254 0086 1148     		ldr	r0, .L17+8
 255 0088 114B     		ldr	r3, .L17+12
 256 008a 0360     		str	r3, [r0]
 107:Src/adc.c     ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 257              		.loc 1 107 0
 258 008c 4560     		str	r5, [r0, #4]
 108:Src/adc.c     ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 259              		.loc 1 108 0
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKo0yXJ.s 			page 8


 260 008e 8560     		str	r5, [r0, #8]
 109:Src/adc.c     ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 261              		.loc 1 109 0
 262 0090 C560     		str	r5, [r0, #12]
 110:Src/adc.c     ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 263              		.loc 1 110 0
 264 0092 4FF48063 		mov	r3, #1024
 265 0096 0361     		str	r3, [r0, #16]
 111:Src/adc.c     ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 266              		.loc 1 111 0
 267 0098 4FF40063 		mov	r3, #2048
 268 009c 4361     		str	r3, [r0, #20]
 112:Src/adc.c     ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 269              		.loc 1 112 0
 270 009e 4FF40053 		mov	r3, #8192
 271 00a2 8361     		str	r3, [r0, #24]
 113:Src/adc.c     ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 272              		.loc 1 113 0
 273 00a4 4FF48073 		mov	r3, #256
 274 00a8 C361     		str	r3, [r0, #28]
 114:Src/adc.c     ****     hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 275              		.loc 1 114 0
 276 00aa 0562     		str	r5, [r0, #32]
 115:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 277              		.loc 1 115 0
 278 00ac 4562     		str	r5, [r0, #36]
 116:Src/adc.c     ****     {
 279              		.loc 1 116 0
 280 00ae FFF7FEFF 		bl	HAL_DMA_Init
 281              	.LVL12:
 282 00b2 18B9     		cbnz	r0, .L16
 283              	.L13:
 121:Src/adc.c     **** 
 284              		.loc 1 121 0
 285 00b4 054B     		ldr	r3, .L17+8
 286 00b6 A363     		str	r3, [r4, #56]
 287 00b8 9C63     		str	r4, [r3, #56]
 288              		.loc 1 127 0
 289 00ba B0E7     		b	.L11
 290              	.L16:
 118:Src/adc.c     ****     }
 291              		.loc 1 118 0
 292 00bc FFF7FEFF 		bl	Error_Handler
 293              	.LVL13:
 294 00c0 F8E7     		b	.L13
 295              	.L18:
 296 00c2 00BF     		.align	2
 297              	.L17:
 298 00c4 00080240 		.word	1073874944
 299 00c8 00000240 		.word	1073872896
 300 00cc 00000000 		.word	hdma_adc1
 301 00d0 10640240 		.word	1073898512
 302              		.cfi_endproc
 303              	.LFE131:
 305              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 306              		.align	1
 307              		.global	HAL_ADC_MspDeInit
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKo0yXJ.s 			page 9


 308              		.syntax unified
 309              		.thumb
 310              		.thumb_func
 311              		.fpu fpv4-sp-d16
 313              	HAL_ADC_MspDeInit:
 314              	.LFB132:
 128:Src/adc.c     **** 
 129:Src/adc.c     **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 130:Src/adc.c     **** {
 315              		.loc 1 130 0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319              	.LVL14:
 131:Src/adc.c     **** 
 132:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 320              		.loc 1 132 0
 321 0000 0268     		ldr	r2, [r0]
 322 0002 0B4B     		ldr	r3, .L26
 323 0004 9A42     		cmp	r2, r3
 324 0006 00D0     		beq	.L25
 325 0008 7047     		bx	lr
 326              	.L25:
 130:Src/adc.c     **** 
 327              		.loc 1 130 0
 328 000a 10B5     		push	{r4, lr}
 329              	.LCFI8:
 330              		.cfi_def_cfa_offset 8
 331              		.cfi_offset 4, -8
 332              		.cfi_offset 14, -4
 333 000c 0446     		mov	r4, r0
 133:Src/adc.c     ****   {
 134:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 135:Src/adc.c     **** 
 136:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 0 */
 137:Src/adc.c     ****     /* Peripheral clock disable */
 138:Src/adc.c     ****     __HAL_RCC_ADC1_CLK_DISABLE();
 334              		.loc 1 138 0
 335 000e 094A     		ldr	r2, .L26+4
 336 0010 536C     		ldr	r3, [r2, #68]
 337 0012 23F48073 		bic	r3, r3, #256
 338 0016 5364     		str	r3, [r2, #68]
 139:Src/adc.c     **** 
 140:Src/adc.c     ****     /**ADC1 GPIO Configuration
 141:Src/adc.c     ****     PC0     ------> ADC1_IN10
 142:Src/adc.c     ****     PC1     ------> ADC1_IN11
 143:Src/adc.c     ****     PA2     ------> ADC1_IN2
 144:Src/adc.c     ****     PC4     ------> ADC1_IN14
 145:Src/adc.c     ****     PC5     ------> ADC1_IN15
 146:Src/adc.c     ****     */
 147:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOC, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5);
 339              		.loc 1 147 0
 340 0018 3321     		movs	r1, #51
 341 001a 0748     		ldr	r0, .L26+8
 342              	.LVL15:
 343 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 344              	.LVL16:
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKo0yXJ.s 			page 10


 148:Src/adc.c     **** 
 149:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 345              		.loc 1 149 0
 346 0020 0421     		movs	r1, #4
 347 0022 0648     		ldr	r0, .L26+12
 348 0024 FFF7FEFF 		bl	HAL_GPIO_DeInit
 349              	.LVL17:
 150:Src/adc.c     **** 
 151:Src/adc.c     ****     /* ADC1 DMA DeInit */
 152:Src/adc.c     ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 350              		.loc 1 152 0
 351 0028 A06B     		ldr	r0, [r4, #56]
 352 002a FFF7FEFF 		bl	HAL_DMA_DeInit
 353              	.LVL18:
 354 002e 10BD     		pop	{r4, pc}
 355              	.LVL19:
 356              	.L27:
 357              		.align	2
 358              	.L26:
 359 0030 00200140 		.word	1073815552
 360 0034 00380240 		.word	1073887232
 361 0038 00080240 		.word	1073874944
 362 003c 00000240 		.word	1073872896
 363              		.cfi_endproc
 364              	.LFE132:
 366              		.comm	hdma_adc1,96,4
 367              		.comm	hadc1,72,4
 368              		.text
 369              	.Letext0:
 370              		.file 2 "/Users/geekzjk/opt/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/machine/_defa
 371              		.file 3 "/Users/geekzjk/opt/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/_stdint.h
 372              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 373              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 374              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 375              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 376              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 377              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 378              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 379              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 380              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 381              		.file 13 "Inc/adc.h"
 382              		.file 14 "Inc/main.h"
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKo0yXJ.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 adc.c
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKo0yXJ.s:18     .text.MX_ADC1_Init:0000000000000000 $t
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKo0yXJ.s:25     .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKo0yXJ.s:136    .text.MX_ADC1_Init:000000000000007c $d
                            *COM*:0000000000000048 hadc1
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKo0yXJ.s:143    .text.HAL_ADC_MspInit:0000000000000000 $t
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKo0yXJ.s:150    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKo0yXJ.s:298    .text.HAL_ADC_MspInit:00000000000000c4 $d
                            *COM*:0000000000000060 hdma_adc1
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKo0yXJ.s:306    .text.HAL_ADC_MspDeInit:0000000000000000 $t
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKo0yXJ.s:313    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKo0yXJ.s:359    .text.HAL_ADC_MspDeInit:0000000000000030 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_ADC_Init
HAL_ADC_ConfigChannel
Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_GPIO_DeInit
HAL_DMA_DeInit
