ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	NMI_Handler:
  26              	.LFB130:
  27              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f4xx_it.c **** /**
   3:Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Src/stm32f4xx_it.c ****   * @attention
   8:Src/stm32f4xx_it.c ****   *
   9:Src/stm32f4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Src/stm32f4xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f4xx_it.c ****   *
  12:Src/stm32f4xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/stm32f4xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Src/stm32f4xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Src/stm32f4xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/stm32f4xx_it.c ****   *
  17:Src/stm32f4xx_it.c ****   ******************************************************************************
  18:Src/stm32f4xx_it.c ****   */
  19:Src/stm32f4xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f4xx_it.c **** 
  21:Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f4xx_it.c **** #include "main.h"
  23:Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  24:Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  26:Src/stm32f4xx_it.c **** #include "user_main.h"
  27:Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  28:Src/stm32f4xx_it.c **** 
  29:Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  30:Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  31:Src/stm32f4xx_it.c **** 
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s 			page 2


  32:Src/stm32f4xx_it.c **** /* USER CODE END TD */
  33:Src/stm32f4xx_it.c **** 
  34:Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  35:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  36:Src/stm32f4xx_it.c **** 
  37:Src/stm32f4xx_it.c **** /* USER CODE END PD */
  38:Src/stm32f4xx_it.c **** 
  39:Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  40:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  41:Src/stm32f4xx_it.c **** 
  42:Src/stm32f4xx_it.c **** /* USER CODE END PM */
  43:Src/stm32f4xx_it.c **** 
  44:Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  45:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  46:Src/stm32f4xx_it.c **** 
  47:Src/stm32f4xx_it.c **** /* USER CODE END PV */
  48:Src/stm32f4xx_it.c **** 
  49:Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  50:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  51:Src/stm32f4xx_it.c **** 
  52:Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  53:Src/stm32f4xx_it.c **** 
  54:Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  55:Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  56:Src/stm32f4xx_it.c **** 
  57:Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  58:Src/stm32f4xx_it.c **** 
  59:Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  60:Src/stm32f4xx_it.c **** extern CAN_HandleTypeDef hcan1;
  61:Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim1;
  62:Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim6;
  63:Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim7;
  64:Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim10;
  65:Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  66:Src/stm32f4xx_it.c **** 
  67:Src/stm32f4xx_it.c **** /* USER CODE END EV */
  68:Src/stm32f4xx_it.c **** 
  69:Src/stm32f4xx_it.c **** /******************************************************************************/
  70:Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  71:Src/stm32f4xx_it.c **** /******************************************************************************/
  72:Src/stm32f4xx_it.c **** /**
  73:Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  74:Src/stm32f4xx_it.c ****   */
  75:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  76:Src/stm32f4xx_it.c **** {
  28              		.loc 1 76 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE130:
  37              		.section	.text.HardFault_Handler,"ax",%progbits
  38              		.align	1
  39              		.global	HardFault_Handler
  40              		.syntax unified
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s 			page 3


  41              		.thumb
  42              		.thumb_func
  43              		.fpu fpv4-sp-d16
  45              	HardFault_Handler:
  46              	.LFB131:
  77:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  78:Src/stm32f4xx_it.c **** 
  79:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  80:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  81:Src/stm32f4xx_it.c **** 
  82:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  83:Src/stm32f4xx_it.c **** }
  84:Src/stm32f4xx_it.c **** 
  85:Src/stm32f4xx_it.c **** /**
  86:Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  87:Src/stm32f4xx_it.c ****   */
  88:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  89:Src/stm32f4xx_it.c **** {
  47              		.loc 1 89 0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.L3:
  54 0000 FEE7     		b	.L3
  55              		.cfi_endproc
  56              	.LFE131:
  58              		.section	.text.MemManage_Handler,"ax",%progbits
  59              		.align	1
  60              		.global	MemManage_Handler
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu fpv4-sp-d16
  66              	MemManage_Handler:
  67              	.LFB132:
  90:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  91:Src/stm32f4xx_it.c **** 
  92:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  93:Src/stm32f4xx_it.c ****   while (1)
  94:Src/stm32f4xx_it.c ****   {
  95:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  96:Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  97:Src/stm32f4xx_it.c ****   }
  98:Src/stm32f4xx_it.c **** }
  99:Src/stm32f4xx_it.c **** 
 100:Src/stm32f4xx_it.c **** /**
 101:Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 102:Src/stm32f4xx_it.c ****   */
 103:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 104:Src/stm32f4xx_it.c **** {
  68              		.loc 1 104 0
  69              		.cfi_startproc
  70              		@ Volatile: function does not return.
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s 			page 4


  73              		@ link register save eliminated.
  74              	.L5:
  75 0000 FEE7     		b	.L5
  76              		.cfi_endproc
  77              	.LFE132:
  79              		.section	.text.BusFault_Handler,"ax",%progbits
  80              		.align	1
  81              		.global	BusFault_Handler
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu fpv4-sp-d16
  87              	BusFault_Handler:
  88              	.LFB133:
 105:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 106:Src/stm32f4xx_it.c **** 
 107:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 108:Src/stm32f4xx_it.c ****   while (1)
 109:Src/stm32f4xx_it.c ****   {
 110:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 111:Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 112:Src/stm32f4xx_it.c ****   }
 113:Src/stm32f4xx_it.c **** }
 114:Src/stm32f4xx_it.c **** 
 115:Src/stm32f4xx_it.c **** /**
 116:Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 117:Src/stm32f4xx_it.c ****   */
 118:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 119:Src/stm32f4xx_it.c **** {
  89              		.loc 1 119 0
  90              		.cfi_startproc
  91              		@ Volatile: function does not return.
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
  95              	.L7:
  96 0000 FEE7     		b	.L7
  97              		.cfi_endproc
  98              	.LFE133:
 100              		.section	.text.UsageFault_Handler,"ax",%progbits
 101              		.align	1
 102              		.global	UsageFault_Handler
 103              		.syntax unified
 104              		.thumb
 105              		.thumb_func
 106              		.fpu fpv4-sp-d16
 108              	UsageFault_Handler:
 109              	.LFB134:
 120:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 121:Src/stm32f4xx_it.c **** 
 122:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 123:Src/stm32f4xx_it.c ****   while (1)
 124:Src/stm32f4xx_it.c ****   {
 125:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 126:Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 127:Src/stm32f4xx_it.c ****   }
 128:Src/stm32f4xx_it.c **** }
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s 			page 5


 129:Src/stm32f4xx_it.c **** 
 130:Src/stm32f4xx_it.c **** /**
 131:Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 132:Src/stm32f4xx_it.c ****   */
 133:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 134:Src/stm32f4xx_it.c **** {
 110              		.loc 1 134 0
 111              		.cfi_startproc
 112              		@ Volatile: function does not return.
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 116              	.L9:
 117 0000 FEE7     		b	.L9
 118              		.cfi_endproc
 119              	.LFE134:
 121              		.section	.text.SVC_Handler,"ax",%progbits
 122              		.align	1
 123              		.global	SVC_Handler
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 127              		.fpu fpv4-sp-d16
 129              	SVC_Handler:
 130              	.LFB135:
 135:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 136:Src/stm32f4xx_it.c **** 
 137:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 138:Src/stm32f4xx_it.c ****   while (1)
 139:Src/stm32f4xx_it.c ****   {
 140:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 141:Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 142:Src/stm32f4xx_it.c ****   }
 143:Src/stm32f4xx_it.c **** }
 144:Src/stm32f4xx_it.c **** 
 145:Src/stm32f4xx_it.c **** /**
 146:Src/stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 147:Src/stm32f4xx_it.c ****   */
 148:Src/stm32f4xx_it.c **** void SVC_Handler(void)
 149:Src/stm32f4xx_it.c **** {
 131              		.loc 1 149 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              		@ link register save eliminated.
 136 0000 7047     		bx	lr
 137              		.cfi_endproc
 138              	.LFE135:
 140              		.section	.text.DebugMon_Handler,"ax",%progbits
 141              		.align	1
 142              		.global	DebugMon_Handler
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 146              		.fpu fpv4-sp-d16
 148              	DebugMon_Handler:
 149              	.LFB136:
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s 			page 6


 150:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 151:Src/stm32f4xx_it.c **** 
 152:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 153:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 154:Src/stm32f4xx_it.c **** 
 155:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 156:Src/stm32f4xx_it.c **** }
 157:Src/stm32f4xx_it.c **** 
 158:Src/stm32f4xx_it.c **** /**
 159:Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 160:Src/stm32f4xx_it.c ****   */
 161:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 162:Src/stm32f4xx_it.c **** {
 150              		.loc 1 162 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 155 0000 7047     		bx	lr
 156              		.cfi_endproc
 157              	.LFE136:
 159              		.section	.text.PendSV_Handler,"ax",%progbits
 160              		.align	1
 161              		.global	PendSV_Handler
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv4-sp-d16
 167              	PendSV_Handler:
 168              	.LFB137:
 163:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 164:Src/stm32f4xx_it.c **** 
 165:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 166:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 167:Src/stm32f4xx_it.c **** 
 168:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 169:Src/stm32f4xx_it.c **** }
 170:Src/stm32f4xx_it.c **** 
 171:Src/stm32f4xx_it.c **** /**
 172:Src/stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
 173:Src/stm32f4xx_it.c ****   */
 174:Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 175:Src/stm32f4xx_it.c **** {
 169              		.loc 1 175 0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 174 0000 7047     		bx	lr
 175              		.cfi_endproc
 176              	.LFE137:
 178              		.section	.text.SysTick_Handler,"ax",%progbits
 179              		.align	1
 180              		.global	SysTick_Handler
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s 			page 7


 184              		.fpu fpv4-sp-d16
 186              	SysTick_Handler:
 187              	.LFB138:
 176:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 177:Src/stm32f4xx_it.c **** 
 178:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 179:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 180:Src/stm32f4xx_it.c **** 
 181:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 182:Src/stm32f4xx_it.c **** }
 183:Src/stm32f4xx_it.c **** 
 184:Src/stm32f4xx_it.c **** /**
 185:Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 186:Src/stm32f4xx_it.c ****   */
 187:Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 188:Src/stm32f4xx_it.c **** {
 188              		.loc 1 188 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		.loc 1 188 0
 193 0000 08B5     		push	{r3, lr}
 194              	.LCFI0:
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 3, -8
 197              		.cfi_offset 14, -4
 189:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 190:Src/stm32f4xx_it.c **** 
 191:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 192:Src/stm32f4xx_it.c ****   HAL_IncTick();
 198              		.loc 1 192 0
 199 0002 FFF7FEFF 		bl	HAL_IncTick
 200              	.LVL0:
 201 0006 08BD     		pop	{r3, pc}
 202              		.cfi_endproc
 203              	.LFE138:
 205              		.section	.text.EXTI4_IRQHandler,"ax",%progbits
 206              		.align	1
 207              		.global	EXTI4_IRQHandler
 208              		.syntax unified
 209              		.thumb
 210              		.thumb_func
 211              		.fpu fpv4-sp-d16
 213              	EXTI4_IRQHandler:
 214              	.LFB139:
 193:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 194:Src/stm32f4xx_it.c **** 
 195:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 196:Src/stm32f4xx_it.c **** }
 197:Src/stm32f4xx_it.c **** 
 198:Src/stm32f4xx_it.c **** /******************************************************************************/
 199:Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 200:Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 201:Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 202:Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 203:Src/stm32f4xx_it.c **** /******************************************************************************/
 204:Src/stm32f4xx_it.c **** 
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s 			page 8


 205:Src/stm32f4xx_it.c **** /**
 206:Src/stm32f4xx_it.c ****   * @brief This function handles EXTI line4 interrupt.
 207:Src/stm32f4xx_it.c ****   */
 208:Src/stm32f4xx_it.c **** void EXTI4_IRQHandler(void)
 209:Src/stm32f4xx_it.c **** {
 215              		.loc 1 209 0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 0
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 219 0000 08B5     		push	{r3, lr}
 220              	.LCFI1:
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 3, -8
 223              		.cfi_offset 14, -4
 210:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 0 */
 211:Src/stm32f4xx_it.c **** 
 212:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI4_IRQn 0 */
 213:Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_4);
 224              		.loc 1 213 0
 225 0002 1020     		movs	r0, #16
 226 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 227              	.LVL1:
 214:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 1 */
 215:Src/stm32f4xx_it.c ****   motor_change_phase();
 228              		.loc 1 215 0
 229 0008 FFF7FEFF 		bl	motor_change_phase
 230              	.LVL2:
 216:Src/stm32f4xx_it.c ****   // motor_get_speed();
 217:Src/stm32f4xx_it.c ****   motor_get_position();
 231              		.loc 1 217 0
 232 000c FFF7FEFF 		bl	motor_get_position
 233              	.LVL3:
 234 0010 08BD     		pop	{r3, pc}
 235              		.cfi_endproc
 236              	.LFE139:
 238              		.section	.text.CAN1_RX0_IRQHandler,"ax",%progbits
 239              		.align	1
 240              		.global	CAN1_RX0_IRQHandler
 241              		.syntax unified
 242              		.thumb
 243              		.thumb_func
 244              		.fpu fpv4-sp-d16
 246              	CAN1_RX0_IRQHandler:
 247              	.LFB140:
 218:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI4_IRQn 1 */
 219:Src/stm32f4xx_it.c **** }
 220:Src/stm32f4xx_it.c **** 
 221:Src/stm32f4xx_it.c **** /**
 222:Src/stm32f4xx_it.c ****   * @brief This function handles CAN1 RX0 interrupts.
 223:Src/stm32f4xx_it.c ****   */
 224:Src/stm32f4xx_it.c **** void CAN1_RX0_IRQHandler(void)
 225:Src/stm32f4xx_it.c **** {
 248              		.loc 1 225 0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 252 0000 08B5     		push	{r3, lr}
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s 			page 9


 253              	.LCFI2:
 254              		.cfi_def_cfa_offset 8
 255              		.cfi_offset 3, -8
 256              		.cfi_offset 14, -4
 226:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_RX0_IRQn 0 */
 227:Src/stm32f4xx_it.c **** 
 228:Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_RX0_IRQn 0 */
 229:Src/stm32f4xx_it.c ****   HAL_CAN_IRQHandler(&hcan1);
 257              		.loc 1 229 0
 258 0002 0348     		ldr	r0, .L19
 259 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 260              	.LVL4:
 230:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_RX0_IRQn 1 */
 231:Src/stm32f4xx_it.c ****   can_rx_data();
 261              		.loc 1 231 0
 262 0008 FFF7FEFF 		bl	can_rx_data
 263              	.LVL5:
 264 000c 08BD     		pop	{r3, pc}
 265              	.L20:
 266 000e 00BF     		.align	2
 267              	.L19:
 268 0010 00000000 		.word	hcan1
 269              		.cfi_endproc
 270              	.LFE140:
 272              		.section	.text.EXTI9_5_IRQHandler,"ax",%progbits
 273              		.align	1
 274              		.global	EXTI9_5_IRQHandler
 275              		.syntax unified
 276              		.thumb
 277              		.thumb_func
 278              		.fpu fpv4-sp-d16
 280              	EXTI9_5_IRQHandler:
 281              	.LFB141:
 232:Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_RX0_IRQn 1 */
 233:Src/stm32f4xx_it.c **** }
 234:Src/stm32f4xx_it.c **** 
 235:Src/stm32f4xx_it.c **** /**
 236:Src/stm32f4xx_it.c ****   * @brief This function handles EXTI line[9:5] interrupts.
 237:Src/stm32f4xx_it.c ****   */
 238:Src/stm32f4xx_it.c **** void EXTI9_5_IRQHandler(void)
 239:Src/stm32f4xx_it.c **** {
 282              		.loc 1 239 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286 0000 08B5     		push	{r3, lr}
 287              	.LCFI3:
 288              		.cfi_def_cfa_offset 8
 289              		.cfi_offset 3, -8
 290              		.cfi_offset 14, -4
 240:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 0 */
 241:Src/stm32f4xx_it.c **** 
 242:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 0 */
 243:Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_5);
 291              		.loc 1 243 0
 292 0002 2020     		movs	r0, #32
 293 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s 			page 10


 294              	.LVL6:
 244:Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_9);
 295              		.loc 1 244 0
 296 0008 4FF40070 		mov	r0, #512
 297 000c FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 298              	.LVL7:
 245:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 1 */
 246:Src/stm32f4xx_it.c ****   motor_change_phase();
 299              		.loc 1 246 0
 300 0010 FFF7FEFF 		bl	motor_change_phase
 301              	.LVL8:
 247:Src/stm32f4xx_it.c ****   // motor_get_speed();
 248:Src/stm32f4xx_it.c ****   motor_get_position();
 302              		.loc 1 248 0
 303 0014 FFF7FEFF 		bl	motor_get_position
 304              	.LVL9:
 305 0018 08BD     		pop	{r3, pc}
 306              		.cfi_endproc
 307              	.LFE141:
 309              		.section	.text.TIM1_UP_TIM10_IRQHandler,"ax",%progbits
 310              		.align	1
 311              		.global	TIM1_UP_TIM10_IRQHandler
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 315              		.fpu fpv4-sp-d16
 317              	TIM1_UP_TIM10_IRQHandler:
 318              	.LFB142:
 249:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 1 */
 250:Src/stm32f4xx_it.c **** }
 251:Src/stm32f4xx_it.c **** 
 252:Src/stm32f4xx_it.c **** /**
 253:Src/stm32f4xx_it.c ****   * @brief This function handles TIM1 update interrupt and TIM10 global interrupt.
 254:Src/stm32f4xx_it.c ****   */
 255:Src/stm32f4xx_it.c **** void TIM1_UP_TIM10_IRQHandler(void)
 256:Src/stm32f4xx_it.c **** {
 319              		.loc 1 256 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323 0000 08B5     		push	{r3, lr}
 324              	.LCFI4:
 325              		.cfi_def_cfa_offset 8
 326              		.cfi_offset 3, -8
 327              		.cfi_offset 14, -4
 257:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 0 */
 258:Src/stm32f4xx_it.c **** 
 259:Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_UP_TIM10_IRQn 0 */
 260:Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 328              		.loc 1 260 0
 329 0002 0348     		ldr	r0, .L25
 330 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 331              	.LVL10:
 261:Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim10);
 332              		.loc 1 261 0
 333 0008 0248     		ldr	r0, .L25+4
 334 000a FFF7FEFF 		bl	HAL_TIM_IRQHandler
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s 			page 11


 335              	.LVL11:
 336 000e 08BD     		pop	{r3, pc}
 337              	.L26:
 338              		.align	2
 339              	.L25:
 340 0010 00000000 		.word	htim1
 341 0014 00000000 		.word	htim10
 342              		.cfi_endproc
 343              	.LFE142:
 345              		.section	.text.TIM6_DAC_IRQHandler,"ax",%progbits
 346              		.align	1
 347              		.global	TIM6_DAC_IRQHandler
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 351              		.fpu fpv4-sp-d16
 353              	TIM6_DAC_IRQHandler:
 354              	.LFB143:
 262:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 1 */
 263:Src/stm32f4xx_it.c **** 
 264:Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_UP_TIM10_IRQn 1 */
 265:Src/stm32f4xx_it.c **** }
 266:Src/stm32f4xx_it.c **** 
 267:Src/stm32f4xx_it.c **** /**
 268:Src/stm32f4xx_it.c ****   * @brief This function handles TIM6 global interrupt, DAC1 and DAC2 underrun error interrupts.
 269:Src/stm32f4xx_it.c ****   */
 270:Src/stm32f4xx_it.c **** void TIM6_DAC_IRQHandler(void)
 271:Src/stm32f4xx_it.c **** {
 355              		.loc 1 271 0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359 0000 08B5     		push	{r3, lr}
 360              	.LCFI5:
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 3, -8
 363              		.cfi_offset 14, -4
 272:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 0 */
 273:Src/stm32f4xx_it.c **** 
 274:Src/stm32f4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 0 */
 275:Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim6);
 364              		.loc 1 275 0
 365 0002 0748     		ldr	r0, .L30
 366 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 367              	.LVL12:
 276:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 1 */
 277:Src/stm32f4xx_it.c ****   motor_get_speed();
 368              		.loc 1 277 0
 369 0008 FFF7FEFF 		bl	motor_get_speed
 370              	.LVL13:
 278:Src/stm32f4xx_it.c ****   motor_check_0_speed();
 371              		.loc 1 278 0
 372 000c FFF7FEFF 		bl	motor_check_0_speed
 373              	.LVL14:
 279:Src/stm32f4xx_it.c ****   if (braking_flag)
 374              		.loc 1 279 0
 375 0010 044B     		ldr	r3, .L30+4
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s 			page 12


 376 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 377 0014 13B1     		cbz	r3, .L27
 280:Src/stm32f4xx_it.c ****     motor.pwm = 0;
 378              		.loc 1 280 0
 379 0016 0022     		movs	r2, #0
 380 0018 034B     		ldr	r3, .L30+8
 381 001a 1A70     		strb	r2, [r3]
 382              	.L27:
 383 001c 08BD     		pop	{r3, pc}
 384              	.L31:
 385 001e 00BF     		.align	2
 386              	.L30:
 387 0020 00000000 		.word	htim6
 388 0024 00000000 		.word	braking_flag
 389 0028 00000000 		.word	motor
 390              		.cfi_endproc
 391              	.LFE143:
 393              		.section	.text.TIM7_IRQHandler,"ax",%progbits
 394              		.align	1
 395              		.global	TIM7_IRQHandler
 396              		.syntax unified
 397              		.thumb
 398              		.thumb_func
 399              		.fpu fpv4-sp-d16
 401              	TIM7_IRQHandler:
 402              	.LFB144:
 281:Src/stm32f4xx_it.c ****   // motor_speed_loop(0);
 282:Src/stm32f4xx_it.c ****   // motor_position_loop(motor_position);
 283:Src/stm32f4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 1 */
 284:Src/stm32f4xx_it.c **** }
 285:Src/stm32f4xx_it.c **** 
 286:Src/stm32f4xx_it.c **** /**
 287:Src/stm32f4xx_it.c ****   * @brief This function handles TIM7 global interrupt.
 288:Src/stm32f4xx_it.c ****   */
 289:Src/stm32f4xx_it.c **** void TIM7_IRQHandler(void)
 290:Src/stm32f4xx_it.c **** {
 403              		.loc 1 290 0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407 0000 08B5     		push	{r3, lr}
 408              	.LCFI6:
 409              		.cfi_def_cfa_offset 8
 410              		.cfi_offset 3, -8
 411              		.cfi_offset 14, -4
 291:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM7_IRQn 0 */
 292:Src/stm32f4xx_it.c **** 
 293:Src/stm32f4xx_it.c ****   /* USER CODE END TIM7_IRQn 0 */
 294:Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim7);
 412              		.loc 1 294 0
 413 0002 0648     		ldr	r0, .L34
 414 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 415              	.LVL15:
 295:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM7_IRQn 1 */
 296:Src/stm32f4xx_it.c ****   motor_pwm_buffer();
 416              		.loc 1 296 0
 417 0008 FFF7FEFF 		bl	motor_pwm_buffer
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s 			page 13


 418              	.LVL16:
 297:Src/stm32f4xx_it.c ****   M3508_update_control();
 419              		.loc 1 297 0
 420 000c FFF7FEFF 		bl	M3508_update_control
 421              	.LVL17:
 298:Src/stm32f4xx_it.c ****   can_tx_data();
 422              		.loc 1 298 0
 423 0010 FFF7FEFF 		bl	can_tx_data
 424              	.LVL18:
 299:Src/stm32f4xx_it.c **** 
 300:Src/stm32f4xx_it.c ****   motor_check_0_speed();
 425              		.loc 1 300 0
 426 0014 FFF7FEFF 		bl	motor_check_0_speed
 427              	.LVL19:
 428 0018 08BD     		pop	{r3, pc}
 429              	.L35:
 430 001a 00BF     		.align	2
 431              	.L34:
 432 001c 00000000 		.word	htim7
 433              		.cfi_endproc
 434              	.LFE144:
 436              		.text
 437              	.Letext0:
 438              		.file 2 "/Users/geekzjk/opt/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/machine/_defa
 439              		.file 3 "/Users/geekzjk/opt/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/_stdint.h
 440              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 441              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 442              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 443              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 444              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 445              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 446              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 447              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 448              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 449              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 450              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 451              		.file 15 "Inc/can.h"
 452              		.file 16 "Inc/tim.h"
 453              		.file 17 "Inc/spi.h"
 454              		.file 18 "Inc/adc.h"
 455              		.file 19 "Inc/User/algorithm.h"
 456              		.file 20 "/Users/geekzjk/opt/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/lock.h"
 457              		.file 21 "/Users/geekzjk/opt/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/_types.h
 458              		.file 22 "/Users/geekzjk/opt/gcc-arm-none-eabi-6-2017-q2-update/lib/gcc/arm-none-eabi/6.3.1/includ
 459              		.file 23 "/Users/geekzjk/opt/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/reent.h"
 460              		.file 24 "/Users/geekzjk/opt/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/stdlib.h"
 461              		.file 25 "Inc/User/motor_driver.h"
 462              		.file 26 "Inc/User/can_protocol.h"
 463              		.file 27 "Inc/User/WS2812B.h"
 464              		.file 28 "Inc/User/MPU6050.h"
 465              		.file 29 "Inc/User/M3508.h"
 466              		.file 30 "Inc/User/user_control.h"
 467              		.file 31 "Inc/User/user_main.h"
 468              		.file 32 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s:18     .text.NMI_Handler:0000000000000000 $t
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s:38     .text.HardFault_Handler:0000000000000000 $t
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s:45     .text.HardFault_Handler:0000000000000000 HardFault_Handler
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s:59     .text.MemManage_Handler:0000000000000000 $t
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s:66     .text.MemManage_Handler:0000000000000000 MemManage_Handler
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s:80     .text.BusFault_Handler:0000000000000000 $t
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s:87     .text.BusFault_Handler:0000000000000000 BusFault_Handler
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s:101    .text.UsageFault_Handler:0000000000000000 $t
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s:108    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s:122    .text.SVC_Handler:0000000000000000 $t
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s:129    .text.SVC_Handler:0000000000000000 SVC_Handler
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s:141    .text.DebugMon_Handler:0000000000000000 $t
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s:148    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s:160    .text.PendSV_Handler:0000000000000000 $t
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s:167    .text.PendSV_Handler:0000000000000000 PendSV_Handler
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s:179    .text.SysTick_Handler:0000000000000000 $t
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s:186    .text.SysTick_Handler:0000000000000000 SysTick_Handler
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s:206    .text.EXTI4_IRQHandler:0000000000000000 $t
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s:213    .text.EXTI4_IRQHandler:0000000000000000 EXTI4_IRQHandler
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s:239    .text.CAN1_RX0_IRQHandler:0000000000000000 $t
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s:246    .text.CAN1_RX0_IRQHandler:0000000000000000 CAN1_RX0_IRQHandler
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s:268    .text.CAN1_RX0_IRQHandler:0000000000000010 $d
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s:273    .text.EXTI9_5_IRQHandler:0000000000000000 $t
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s:280    .text.EXTI9_5_IRQHandler:0000000000000000 EXTI9_5_IRQHandler
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s:310    .text.TIM1_UP_TIM10_IRQHandler:0000000000000000 $t
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s:317    .text.TIM1_UP_TIM10_IRQHandler:0000000000000000 TIM1_UP_TIM10_IRQHandler
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s:340    .text.TIM1_UP_TIM10_IRQHandler:0000000000000010 $d
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s:346    .text.TIM6_DAC_IRQHandler:0000000000000000 $t
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s:353    .text.TIM6_DAC_IRQHandler:0000000000000000 TIM6_DAC_IRQHandler
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s:387    .text.TIM6_DAC_IRQHandler:0000000000000020 $d
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s:394    .text.TIM7_IRQHandler:0000000000000000 $t
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s:401    .text.TIM7_IRQHandler:0000000000000000 TIM7_IRQHandler
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s:432    .text.TIM7_IRQHandler:000000000000001c $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_GPIO_EXTI_IRQHandler
motor_change_phase
motor_get_position
HAL_CAN_IRQHandler
can_rx_data
hcan1
HAL_TIM_IRQHandler
htim1
htim10
motor_get_speed
motor_check_0_speed
htim6
braking_flag
motor
motor_pwm_buffer
M3508_update_control
can_tx_data
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccKwTrcI.s 			page 15


htim7
