ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_TIM6_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_TIM6_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_TIM6_Init:
  26              	.LFB131:
  27              		.file 1 "Src/tim.c"
   1:Src/tim.c     **** /**
   2:Src/tim.c     ****   ******************************************************************************
   3:Src/tim.c     ****   * File Name          : TIM.c
   4:Src/tim.c     ****   * Description        : This file provides code for the configuration
   5:Src/tim.c     ****   *                      of the TIM instances.
   6:Src/tim.c     ****   ******************************************************************************
   7:Src/tim.c     ****   * @attention
   8:Src/tim.c     ****   *
   9:Src/tim.c     ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Src/tim.c     ****   * All rights reserved.</center></h2>
  11:Src/tim.c     ****   *
  12:Src/tim.c     ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/tim.c     ****   * the "License"; You may not use this file except in compliance with the
  14:Src/tim.c     ****   * License. You may obtain a copy of the License at:
  15:Src/tim.c     ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/tim.c     ****   *
  17:Src/tim.c     ****   ******************************************************************************
  18:Src/tim.c     ****   */
  19:Src/tim.c     **** 
  20:Src/tim.c     **** /* Includes ------------------------------------------------------------------*/
  21:Src/tim.c     **** #include "tim.h"
  22:Src/tim.c     **** 
  23:Src/tim.c     **** /* USER CODE BEGIN 0 */
  24:Src/tim.c     **** 
  25:Src/tim.c     **** /* USER CODE END 0 */
  26:Src/tim.c     **** 
  27:Src/tim.c     **** TIM_HandleTypeDef htim1;
  28:Src/tim.c     **** TIM_HandleTypeDef htim6;
  29:Src/tim.c     **** TIM_HandleTypeDef htim7;
  30:Src/tim.c     **** TIM_HandleTypeDef htim10;
  31:Src/tim.c     **** 
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s 			page 2


  32:Src/tim.c     **** /* TIM1 init function */
  33:Src/tim.c     **** void MX_TIM1_Init(void)
  34:Src/tim.c     **** {
  35:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
  36:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  37:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC = {0};
  38:Src/tim.c     ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
  39:Src/tim.c     **** 
  40:Src/tim.c     ****   htim1.Instance = TIM1;
  41:Src/tim.c     ****   htim1.Init.Prescaler = 71;
  42:Src/tim.c     ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
  43:Src/tim.c     ****   htim1.Init.Period = 62;
  44:Src/tim.c     ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  45:Src/tim.c     ****   htim1.Init.RepetitionCounter = 0;
  46:Src/tim.c     ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
  47:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
  48:Src/tim.c     ****   {
  49:Src/tim.c     ****     Error_Handler();
  50:Src/tim.c     ****   }
  51:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  52:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
  53:Src/tim.c     ****   {
  54:Src/tim.c     ****     Error_Handler();
  55:Src/tim.c     ****   }
  56:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
  57:Src/tim.c     ****   {
  58:Src/tim.c     ****     Error_Handler();
  59:Src/tim.c     ****   }
  60:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  61:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  62:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
  63:Src/tim.c     ****   {
  64:Src/tim.c     ****     Error_Handler();
  65:Src/tim.c     ****   }
  66:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
  67:Src/tim.c     ****   sConfigOC.Pulse = 0;
  68:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
  69:Src/tim.c     ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
  70:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
  71:Src/tim.c     ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
  72:Src/tim.c     ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
  73:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
  74:Src/tim.c     ****   {
  75:Src/tim.c     ****     Error_Handler();
  76:Src/tim.c     ****   }
  77:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
  78:Src/tim.c     ****   {
  79:Src/tim.c     ****     Error_Handler();
  80:Src/tim.c     ****   }
  81:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
  82:Src/tim.c     ****   {
  83:Src/tim.c     ****     Error_Handler();
  84:Src/tim.c     ****   }
  85:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
  86:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
  87:Src/tim.c     ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
  88:Src/tim.c     ****   sBreakDeadTimeConfig.DeadTime = 2;
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s 			page 3


  89:Src/tim.c     ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
  90:Src/tim.c     ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
  91:Src/tim.c     ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
  92:Src/tim.c     ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
  93:Src/tim.c     ****   {
  94:Src/tim.c     ****     Error_Handler();
  95:Src/tim.c     ****   }
  96:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim1);
  97:Src/tim.c     **** 
  98:Src/tim.c     **** }
  99:Src/tim.c     **** /* TIM6 init function */
 100:Src/tim.c     **** void MX_TIM6_Init(void)
 101:Src/tim.c     **** {
  28              		.loc 1 101 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 00B5     		push	{lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
 102:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  39              		.loc 1 102 0
  40 0004 0023     		movs	r3, #0
  41 0006 0093     		str	r3, [sp]
  42 0008 0193     		str	r3, [sp, #4]
 103:Src/tim.c     **** 
 104:Src/tim.c     ****   htim6.Instance = TIM6;
  43              		.loc 1 104 0
  44 000a 1048     		ldr	r0, .L7
  45 000c 104A     		ldr	r2, .L7+4
  46 000e 0260     		str	r2, [r0]
 105:Src/tim.c     ****   htim6.Init.Prescaler = 719;
  47              		.loc 1 105 0
  48 0010 40F2CF22 		movw	r2, #719
  49 0014 4260     		str	r2, [r0, #4]
 106:Src/tim.c     ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  50              		.loc 1 106 0
  51 0016 8360     		str	r3, [r0, #8]
 107:Src/tim.c     ****   htim6.Init.Period = 9999;
  52              		.loc 1 107 0
  53 0018 42F20F73 		movw	r3, #9999
  54 001c C360     		str	r3, [r0, #12]
 108:Src/tim.c     ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
  55              		.loc 1 108 0
  56 001e 8023     		movs	r3, #128
  57 0020 8361     		str	r3, [r0, #24]
 109:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
  58              		.loc 1 109 0
  59 0022 FFF7FEFF 		bl	HAL_TIM_Base_Init
  60              	.LVL0:
  61 0026 50B9     		cbnz	r0, .L5
  62              	.L2:
 110:Src/tim.c     ****   {
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s 			page 4


 111:Src/tim.c     ****     Error_Handler();
 112:Src/tim.c     ****   }
 113:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  63              		.loc 1 113 0
  64 0028 0023     		movs	r3, #0
  65 002a 0093     		str	r3, [sp]
 114:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  66              		.loc 1 114 0
  67 002c 0193     		str	r3, [sp, #4]
 115:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
  68              		.loc 1 115 0
  69 002e 6946     		mov	r1, sp
  70 0030 0648     		ldr	r0, .L7
  71 0032 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
  72              	.LVL1:
  73 0036 28B9     		cbnz	r0, .L6
  74              	.L1:
 116:Src/tim.c     ****   {
 117:Src/tim.c     ****     Error_Handler();
 118:Src/tim.c     ****   }
 119:Src/tim.c     **** 
 120:Src/tim.c     **** }
  75              		.loc 1 120 0
  76 0038 03B0     		add	sp, sp, #12
  77              	.LCFI2:
  78              		.cfi_remember_state
  79              		.cfi_def_cfa_offset 4
  80              		@ sp needed
  81 003a 5DF804FB 		ldr	pc, [sp], #4
  82              	.L5:
  83              	.LCFI3:
  84              		.cfi_restore_state
 111:Src/tim.c     ****   }
  85              		.loc 1 111 0
  86 003e FFF7FEFF 		bl	Error_Handler
  87              	.LVL2:
  88 0042 F1E7     		b	.L2
  89              	.L6:
 117:Src/tim.c     ****   }
  90              		.loc 1 117 0
  91 0044 FFF7FEFF 		bl	Error_Handler
  92              	.LVL3:
  93              		.loc 1 120 0
  94 0048 F6E7     		b	.L1
  95              	.L8:
  96 004a 00BF     		.align	2
  97              	.L7:
  98 004c 00000000 		.word	htim6
  99 0050 00100040 		.word	1073745920
 100              		.cfi_endproc
 101              	.LFE131:
 103              		.section	.text.MX_TIM7_Init,"ax",%progbits
 104              		.align	1
 105              		.global	MX_TIM7_Init
 106              		.syntax unified
 107              		.thumb
 108              		.thumb_func
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s 			page 5


 109              		.fpu fpv4-sp-d16
 111              	MX_TIM7_Init:
 112              	.LFB132:
 121:Src/tim.c     **** /* TIM7 init function */
 122:Src/tim.c     **** void MX_TIM7_Init(void)
 123:Src/tim.c     **** {
 113              		.loc 1 123 0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 8
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117 0000 00B5     		push	{lr}
 118              	.LCFI4:
 119              		.cfi_def_cfa_offset 4
 120              		.cfi_offset 14, -4
 121 0002 83B0     		sub	sp, sp, #12
 122              	.LCFI5:
 123              		.cfi_def_cfa_offset 16
 124:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 124              		.loc 1 124 0
 125 0004 0023     		movs	r3, #0
 126 0006 0093     		str	r3, [sp]
 127 0008 0193     		str	r3, [sp, #4]
 125:Src/tim.c     **** 
 126:Src/tim.c     ****   htim7.Instance = TIM7;
 128              		.loc 1 126 0
 129 000a 0F48     		ldr	r0, .L15
 130 000c 0F4A     		ldr	r2, .L15+4
 131 000e 0260     		str	r2, [r0]
 127:Src/tim.c     ****   htim7.Init.Prescaler = 71;
 132              		.loc 1 127 0
 133 0010 4722     		movs	r2, #71
 134 0012 4260     		str	r2, [r0, #4]
 128:Src/tim.c     ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 135              		.loc 1 128 0
 136 0014 8360     		str	r3, [r0, #8]
 129:Src/tim.c     ****   htim7.Init.Period = 999;
 137              		.loc 1 129 0
 138 0016 40F2E733 		movw	r3, #999
 139 001a C360     		str	r3, [r0, #12]
 130:Src/tim.c     ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 140              		.loc 1 130 0
 141 001c 8023     		movs	r3, #128
 142 001e 8361     		str	r3, [r0, #24]
 131:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 143              		.loc 1 131 0
 144 0020 FFF7FEFF 		bl	HAL_TIM_Base_Init
 145              	.LVL4:
 146 0024 50B9     		cbnz	r0, .L13
 147              	.L10:
 132:Src/tim.c     ****   {
 133:Src/tim.c     ****     Error_Handler();
 134:Src/tim.c     ****   }
 135:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 148              		.loc 1 135 0
 149 0026 0023     		movs	r3, #0
 150 0028 0093     		str	r3, [sp]
 136:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s 			page 6


 151              		.loc 1 136 0
 152 002a 0193     		str	r3, [sp, #4]
 137:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 153              		.loc 1 137 0
 154 002c 6946     		mov	r1, sp
 155 002e 0648     		ldr	r0, .L15
 156 0030 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 157              	.LVL5:
 158 0034 28B9     		cbnz	r0, .L14
 159              	.L9:
 138:Src/tim.c     ****   {
 139:Src/tim.c     ****     Error_Handler();
 140:Src/tim.c     ****   }
 141:Src/tim.c     **** 
 142:Src/tim.c     **** }
 160              		.loc 1 142 0
 161 0036 03B0     		add	sp, sp, #12
 162              	.LCFI6:
 163              		.cfi_remember_state
 164              		.cfi_def_cfa_offset 4
 165              		@ sp needed
 166 0038 5DF804FB 		ldr	pc, [sp], #4
 167              	.L13:
 168              	.LCFI7:
 169              		.cfi_restore_state
 133:Src/tim.c     ****   }
 170              		.loc 1 133 0
 171 003c FFF7FEFF 		bl	Error_Handler
 172              	.LVL6:
 173 0040 F1E7     		b	.L10
 174              	.L14:
 139:Src/tim.c     ****   }
 175              		.loc 1 139 0
 176 0042 FFF7FEFF 		bl	Error_Handler
 177              	.LVL7:
 178              		.loc 1 142 0
 179 0046 F6E7     		b	.L9
 180              	.L16:
 181              		.align	2
 182              	.L15:
 183 0048 00000000 		.word	htim7
 184 004c 00140040 		.word	1073746944
 185              		.cfi_endproc
 186              	.LFE132:
 188              		.section	.text.MX_TIM10_Init,"ax",%progbits
 189              		.align	1
 190              		.global	MX_TIM10_Init
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 194              		.fpu fpv4-sp-d16
 196              	MX_TIM10_Init:
 197              	.LFB133:
 143:Src/tim.c     **** /* TIM10 init function */
 144:Src/tim.c     **** void MX_TIM10_Init(void)
 145:Src/tim.c     **** {
 198              		.loc 1 145 0
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s 			page 7


 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202 0000 08B5     		push	{r3, lr}
 203              	.LCFI8:
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 3, -8
 206              		.cfi_offset 14, -4
 146:Src/tim.c     **** 
 147:Src/tim.c     ****   htim10.Instance = TIM10;
 207              		.loc 1 147 0
 208 0002 0A48     		ldr	r0, .L21
 209 0004 0A4B     		ldr	r3, .L21+4
 210 0006 0360     		str	r3, [r0]
 148:Src/tim.c     ****   htim10.Init.Prescaler = 71;
 211              		.loc 1 148 0
 212 0008 4723     		movs	r3, #71
 213 000a 4360     		str	r3, [r0, #4]
 149:Src/tim.c     ****   htim10.Init.CounterMode = TIM_COUNTERMODE_UP;
 214              		.loc 1 149 0
 215 000c 0023     		movs	r3, #0
 216 000e 8360     		str	r3, [r0, #8]
 150:Src/tim.c     ****   htim10.Init.Period = 999;
 217              		.loc 1 150 0
 218 0010 40F2E732 		movw	r2, #999
 219 0014 C260     		str	r2, [r0, #12]
 151:Src/tim.c     ****   htim10.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 220              		.loc 1 151 0
 221 0016 0361     		str	r3, [r0, #16]
 152:Src/tim.c     ****   htim10.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 222              		.loc 1 152 0
 223 0018 8023     		movs	r3, #128
 224 001a 8361     		str	r3, [r0, #24]
 153:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim10) != HAL_OK)
 225              		.loc 1 153 0
 226 001c FFF7FEFF 		bl	HAL_TIM_Base_Init
 227              	.LVL8:
 228 0020 00B9     		cbnz	r0, .L20
 229              	.L17:
 230 0022 08BD     		pop	{r3, pc}
 231              	.L20:
 154:Src/tim.c     ****   {
 155:Src/tim.c     ****     Error_Handler();
 232              		.loc 1 155 0
 233 0024 FFF7FEFF 		bl	Error_Handler
 234              	.LVL9:
 156:Src/tim.c     ****   }
 157:Src/tim.c     **** 
 158:Src/tim.c     **** }
 235              		.loc 1 158 0
 236 0028 FBE7     		b	.L17
 237              	.L22:
 238 002a 00BF     		.align	2
 239              	.L21:
 240 002c 00000000 		.word	htim10
 241 0030 00440140 		.word	1073824768
 242              		.cfi_endproc
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s 			page 8


 243              	.LFE133:
 245              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 246              		.align	1
 247              		.global	HAL_TIM_Base_MspInit
 248              		.syntax unified
 249              		.thumb
 250              		.thumb_func
 251              		.fpu fpv4-sp-d16
 253              	HAL_TIM_Base_MspInit:
 254              	.LFB134:
 159:Src/tim.c     **** 
 160:Src/tim.c     **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 161:Src/tim.c     **** {
 255              		.loc 1 161 0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 16
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259              	.LVL10:
 260 0000 00B5     		push	{lr}
 261              	.LCFI9:
 262              		.cfi_def_cfa_offset 4
 263              		.cfi_offset 14, -4
 264 0002 85B0     		sub	sp, sp, #20
 265              	.LCFI10:
 266              		.cfi_def_cfa_offset 24
 162:Src/tim.c     **** 
 163:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM1)
 267              		.loc 1 163 0
 268 0004 0368     		ldr	r3, [r0]
 269 0006 2F4A     		ldr	r2, .L33
 270 0008 9342     		cmp	r3, r2
 271 000a 0BD0     		beq	.L29
 164:Src/tim.c     ****   {
 165:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 0 */
 166:Src/tim.c     **** 
 167:Src/tim.c     ****   /* USER CODE END TIM1_MspInit 0 */
 168:Src/tim.c     ****     /* TIM1 clock enable */
 169:Src/tim.c     ****     __HAL_RCC_TIM1_CLK_ENABLE();
 170:Src/tim.c     **** 
 171:Src/tim.c     ****     /* TIM1 interrupt Init */
 172:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM1_UP_TIM10_IRQn, 1, 0);
 173:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM1_UP_TIM10_IRQn);
 174:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 175:Src/tim.c     **** 
 176:Src/tim.c     ****   /* USER CODE END TIM1_MspInit 1 */
 177:Src/tim.c     ****   }
 178:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM6)
 272              		.loc 1 178 0
 273 000c 2E4A     		ldr	r2, .L33+4
 274 000e 9342     		cmp	r3, r2
 275 0010 1CD0     		beq	.L30
 179:Src/tim.c     ****   {
 180:Src/tim.c     ****   /* USER CODE BEGIN TIM6_MspInit 0 */
 181:Src/tim.c     **** 
 182:Src/tim.c     ****   /* USER CODE END TIM6_MspInit 0 */
 183:Src/tim.c     ****     /* TIM6 clock enable */
 184:Src/tim.c     ****     __HAL_RCC_TIM6_CLK_ENABLE();
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s 			page 9


 185:Src/tim.c     **** 
 186:Src/tim.c     ****     /* TIM6 interrupt Init */
 187:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM6_DAC_IRQn, 0, 0);
 188:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 189:Src/tim.c     ****   /* USER CODE BEGIN TIM6_MspInit 1 */
 190:Src/tim.c     **** 
 191:Src/tim.c     ****   /* USER CODE END TIM6_MspInit 1 */
 192:Src/tim.c     ****   }
 193:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM7)
 276              		.loc 1 193 0
 277 0012 2E4A     		ldr	r2, .L33+8
 278 0014 9342     		cmp	r3, r2
 279 0016 2DD0     		beq	.L31
 194:Src/tim.c     ****   {
 195:Src/tim.c     ****   /* USER CODE BEGIN TIM7_MspInit 0 */
 196:Src/tim.c     **** 
 197:Src/tim.c     ****   /* USER CODE END TIM7_MspInit 0 */
 198:Src/tim.c     ****     /* TIM7 clock enable */
 199:Src/tim.c     ****     __HAL_RCC_TIM7_CLK_ENABLE();
 200:Src/tim.c     **** 
 201:Src/tim.c     ****     /* TIM7 interrupt Init */
 202:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM7_IRQn, 0, 0);
 203:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM7_IRQn);
 204:Src/tim.c     ****   /* USER CODE BEGIN TIM7_MspInit 1 */
 205:Src/tim.c     **** 
 206:Src/tim.c     ****   /* USER CODE END TIM7_MspInit 1 */
 207:Src/tim.c     ****   }
 208:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM10)
 280              		.loc 1 208 0
 281 0018 2D4A     		ldr	r2, .L33+12
 282 001a 9342     		cmp	r3, r2
 283 001c 3ED0     		beq	.L32
 284              	.LVL11:
 285              	.L23:
 209:Src/tim.c     ****   {
 210:Src/tim.c     ****   /* USER CODE BEGIN TIM10_MspInit 0 */
 211:Src/tim.c     **** 
 212:Src/tim.c     ****   /* USER CODE END TIM10_MspInit 0 */
 213:Src/tim.c     ****     /* TIM10 clock enable */
 214:Src/tim.c     ****     __HAL_RCC_TIM10_CLK_ENABLE();
 215:Src/tim.c     **** 
 216:Src/tim.c     ****     /* TIM10 interrupt Init */
 217:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM1_UP_TIM10_IRQn, 1, 0);
 218:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM1_UP_TIM10_IRQn);
 219:Src/tim.c     ****   /* USER CODE BEGIN TIM10_MspInit 1 */
 220:Src/tim.c     **** 
 221:Src/tim.c     ****   /* USER CODE END TIM10_MspInit 1 */
 222:Src/tim.c     ****   }
 223:Src/tim.c     **** }
 286              		.loc 1 223 0
 287 001e 05B0     		add	sp, sp, #20
 288              	.LCFI11:
 289              		.cfi_remember_state
 290              		.cfi_def_cfa_offset 4
 291              		@ sp needed
 292 0020 5DF804FB 		ldr	pc, [sp], #4
 293              	.LVL12:
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s 			page 10


 294              	.L29:
 295              	.LCFI12:
 296              		.cfi_restore_state
 297              	.LBB2:
 169:Src/tim.c     **** 
 298              		.loc 1 169 0
 299 0024 0022     		movs	r2, #0
 300 0026 0092     		str	r2, [sp]
 301 0028 2A4B     		ldr	r3, .L33+16
 302 002a 596C     		ldr	r1, [r3, #68]
 303 002c 41F00101 		orr	r1, r1, #1
 304 0030 5964     		str	r1, [r3, #68]
 305 0032 5B6C     		ldr	r3, [r3, #68]
 306 0034 03F00103 		and	r3, r3, #1
 307 0038 0093     		str	r3, [sp]
 308 003a 009B     		ldr	r3, [sp]
 309              	.LBE2:
 172:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM1_UP_TIM10_IRQn);
 310              		.loc 1 172 0
 311 003c 0121     		movs	r1, #1
 312 003e 1920     		movs	r0, #25
 313              	.LVL13:
 314 0040 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 315              	.LVL14:
 173:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 316              		.loc 1 173 0
 317 0044 1920     		movs	r0, #25
 318 0046 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 319              	.LVL15:
 320 004a E8E7     		b	.L23
 321              	.LVL16:
 322              	.L30:
 323              	.LBB3:
 184:Src/tim.c     **** 
 324              		.loc 1 184 0
 325 004c 0021     		movs	r1, #0
 326 004e 0191     		str	r1, [sp, #4]
 327 0050 204B     		ldr	r3, .L33+16
 328 0052 1A6C     		ldr	r2, [r3, #64]
 329 0054 42F01002 		orr	r2, r2, #16
 330 0058 1A64     		str	r2, [r3, #64]
 331 005a 1B6C     		ldr	r3, [r3, #64]
 332 005c 03F01003 		and	r3, r3, #16
 333 0060 0193     		str	r3, [sp, #4]
 334 0062 019B     		ldr	r3, [sp, #4]
 335              	.LBE3:
 187:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 336              		.loc 1 187 0
 337 0064 0A46     		mov	r2, r1
 338 0066 3620     		movs	r0, #54
 339              	.LVL17:
 340 0068 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 341              	.LVL18:
 188:Src/tim.c     ****   /* USER CODE BEGIN TIM6_MspInit 1 */
 342              		.loc 1 188 0
 343 006c 3620     		movs	r0, #54
 344 006e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s 			page 11


 345              	.LVL19:
 346 0072 D4E7     		b	.L23
 347              	.LVL20:
 348              	.L31:
 349              	.LBB4:
 199:Src/tim.c     **** 
 350              		.loc 1 199 0
 351 0074 0021     		movs	r1, #0
 352 0076 0291     		str	r1, [sp, #8]
 353 0078 164B     		ldr	r3, .L33+16
 354 007a 1A6C     		ldr	r2, [r3, #64]
 355 007c 42F02002 		orr	r2, r2, #32
 356 0080 1A64     		str	r2, [r3, #64]
 357 0082 1B6C     		ldr	r3, [r3, #64]
 358 0084 03F02003 		and	r3, r3, #32
 359 0088 0293     		str	r3, [sp, #8]
 360 008a 029B     		ldr	r3, [sp, #8]
 361              	.LBE4:
 202:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM7_IRQn);
 362              		.loc 1 202 0
 363 008c 0A46     		mov	r2, r1
 364 008e 3720     		movs	r0, #55
 365              	.LVL21:
 366 0090 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 367              	.LVL22:
 203:Src/tim.c     ****   /* USER CODE BEGIN TIM7_MspInit 1 */
 368              		.loc 1 203 0
 369 0094 3720     		movs	r0, #55
 370 0096 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 371              	.LVL23:
 372 009a C0E7     		b	.L23
 373              	.LVL24:
 374              	.L32:
 375              	.LBB5:
 214:Src/tim.c     **** 
 376              		.loc 1 214 0
 377 009c 0022     		movs	r2, #0
 378 009e 0392     		str	r2, [sp, #12]
 379 00a0 0C4B     		ldr	r3, .L33+16
 380 00a2 596C     		ldr	r1, [r3, #68]
 381 00a4 41F40031 		orr	r1, r1, #131072
 382 00a8 5964     		str	r1, [r3, #68]
 383 00aa 5B6C     		ldr	r3, [r3, #68]
 384 00ac 03F40033 		and	r3, r3, #131072
 385 00b0 0393     		str	r3, [sp, #12]
 386 00b2 039B     		ldr	r3, [sp, #12]
 387              	.LBE5:
 217:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM1_UP_TIM10_IRQn);
 388              		.loc 1 217 0
 389 00b4 0121     		movs	r1, #1
 390 00b6 1920     		movs	r0, #25
 391              	.LVL25:
 392 00b8 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 393              	.LVL26:
 218:Src/tim.c     ****   /* USER CODE BEGIN TIM10_MspInit 1 */
 394              		.loc 1 218 0
 395 00bc 1920     		movs	r0, #25
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s 			page 12


 396 00be FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 397              	.LVL27:
 398              		.loc 1 223 0
 399 00c2 ACE7     		b	.L23
 400              	.L34:
 401              		.align	2
 402              	.L33:
 403 00c4 00000140 		.word	1073807360
 404 00c8 00100040 		.word	1073745920
 405 00cc 00140040 		.word	1073746944
 406 00d0 00440140 		.word	1073824768
 407 00d4 00380240 		.word	1073887232
 408              		.cfi_endproc
 409              	.LFE134:
 411              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
 412              		.align	1
 413              		.global	HAL_TIM_MspPostInit
 414              		.syntax unified
 415              		.thumb
 416              		.thumb_func
 417              		.fpu fpv4-sp-d16
 419              	HAL_TIM_MspPostInit:
 420              	.LFB135:
 224:Src/tim.c     **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 225:Src/tim.c     **** {
 421              		.loc 1 225 0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 32
 424              		@ frame_needed = 0, uses_anonymous_args = 0
 425              	.LVL28:
 426 0000 70B5     		push	{r4, r5, r6, lr}
 427              	.LCFI13:
 428              		.cfi_def_cfa_offset 16
 429              		.cfi_offset 4, -16
 430              		.cfi_offset 5, -12
 431              		.cfi_offset 6, -8
 432              		.cfi_offset 14, -4
 433 0002 88B0     		sub	sp, sp, #32
 434              	.LCFI14:
 435              		.cfi_def_cfa_offset 48
 226:Src/tim.c     **** 
 227:Src/tim.c     ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 436              		.loc 1 227 0
 437 0004 0023     		movs	r3, #0
 438 0006 0393     		str	r3, [sp, #12]
 439 0008 0493     		str	r3, [sp, #16]
 440 000a 0593     		str	r3, [sp, #20]
 441 000c 0693     		str	r3, [sp, #24]
 442 000e 0793     		str	r3, [sp, #28]
 228:Src/tim.c     ****   if(timHandle->Instance==TIM1)
 443              		.loc 1 228 0
 444 0010 0268     		ldr	r2, [r0]
 445 0012 194B     		ldr	r3, .L39
 446 0014 9A42     		cmp	r2, r3
 447 0016 01D0     		beq	.L38
 448              	.LVL29:
 449              	.L35:
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s 			page 13


 229:Src/tim.c     ****   {
 230:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspPostInit 0 */
 231:Src/tim.c     **** 
 232:Src/tim.c     ****   /* USER CODE END TIM1_MspPostInit 0 */
 233:Src/tim.c     **** 
 234:Src/tim.c     ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 235:Src/tim.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 236:Src/tim.c     ****     /**TIM1 GPIO Configuration
 237:Src/tim.c     ****     PB13     ------> TIM1_CH1N
 238:Src/tim.c     ****     PB14     ------> TIM1_CH2N
 239:Src/tim.c     ****     PB15     ------> TIM1_CH3N
 240:Src/tim.c     ****     PA8     ------> TIM1_CH1
 241:Src/tim.c     ****     PA9     ------> TIM1_CH2
 242:Src/tim.c     ****     PA10     ------> TIM1_CH3
 243:Src/tim.c     ****     */
 244:Src/tim.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 245:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 246:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 247:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 248:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 249:Src/tim.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 250:Src/tim.c     **** 
 251:Src/tim.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10;
 252:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 253:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 254:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 255:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 256:Src/tim.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 257:Src/tim.c     **** 
 258:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspPostInit 1 */
 259:Src/tim.c     **** 
 260:Src/tim.c     ****   /* USER CODE END TIM1_MspPostInit 1 */
 261:Src/tim.c     ****   }
 262:Src/tim.c     **** 
 263:Src/tim.c     **** }
 450              		.loc 1 263 0
 451 0018 08B0     		add	sp, sp, #32
 452              	.LCFI15:
 453              		.cfi_remember_state
 454              		.cfi_def_cfa_offset 16
 455              		@ sp needed
 456 001a 70BD     		pop	{r4, r5, r6, pc}
 457              	.LVL30:
 458              	.L38:
 459              	.LCFI16:
 460              		.cfi_restore_state
 461              	.LBB6:
 234:Src/tim.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 462              		.loc 1 234 0
 463 001c 0024     		movs	r4, #0
 464 001e 0194     		str	r4, [sp, #4]
 465 0020 03F59C33 		add	r3, r3, #79872
 466 0024 1A6B     		ldr	r2, [r3, #48]
 467 0026 42F00202 		orr	r2, r2, #2
 468 002a 1A63     		str	r2, [r3, #48]
 469 002c 1A6B     		ldr	r2, [r3, #48]
 470 002e 02F00202 		and	r2, r2, #2
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s 			page 14


 471 0032 0192     		str	r2, [sp, #4]
 472 0034 019A     		ldr	r2, [sp, #4]
 473              	.LBE6:
 474              	.LBB7:
 235:Src/tim.c     ****     /**TIM1 GPIO Configuration
 475              		.loc 1 235 0
 476 0036 0294     		str	r4, [sp, #8]
 477 0038 1A6B     		ldr	r2, [r3, #48]
 478 003a 42F00102 		orr	r2, r2, #1
 479 003e 1A63     		str	r2, [r3, #48]
 480 0040 1B6B     		ldr	r3, [r3, #48]
 481 0042 03F00103 		and	r3, r3, #1
 482 0046 0293     		str	r3, [sp, #8]
 483 0048 029B     		ldr	r3, [sp, #8]
 484              	.LBE7:
 244:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 485              		.loc 1 244 0
 486 004a 4FF46043 		mov	r3, #57344
 487 004e 0393     		str	r3, [sp, #12]
 245:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 488              		.loc 1 245 0
 489 0050 0226     		movs	r6, #2
 490 0052 0496     		str	r6, [sp, #16]
 248:Src/tim.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 491              		.loc 1 248 0
 492 0054 0125     		movs	r5, #1
 493 0056 0795     		str	r5, [sp, #28]
 249:Src/tim.c     **** 
 494              		.loc 1 249 0
 495 0058 03A9     		add	r1, sp, #12
 496 005a 0848     		ldr	r0, .L39+4
 497              	.LVL31:
 498 005c FFF7FEFF 		bl	HAL_GPIO_Init
 499              	.LVL32:
 251:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 500              		.loc 1 251 0
 501 0060 4FF4E063 		mov	r3, #1792
 502 0064 0393     		str	r3, [sp, #12]
 252:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 503              		.loc 1 252 0
 504 0066 0496     		str	r6, [sp, #16]
 253:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 505              		.loc 1 253 0
 506 0068 0594     		str	r4, [sp, #20]
 254:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 507              		.loc 1 254 0
 508 006a 0694     		str	r4, [sp, #24]
 255:Src/tim.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 509              		.loc 1 255 0
 510 006c 0795     		str	r5, [sp, #28]
 256:Src/tim.c     **** 
 511              		.loc 1 256 0
 512 006e 03A9     		add	r1, sp, #12
 513 0070 0348     		ldr	r0, .L39+8
 514 0072 FFF7FEFF 		bl	HAL_GPIO_Init
 515              	.LVL33:
 516              		.loc 1 263 0
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s 			page 15


 517 0076 CFE7     		b	.L35
 518              	.L40:
 519              		.align	2
 520              	.L39:
 521 0078 00000140 		.word	1073807360
 522 007c 00040240 		.word	1073873920
 523 0080 00000240 		.word	1073872896
 524              		.cfi_endproc
 525              	.LFE135:
 527              		.section	.text.MX_TIM1_Init,"ax",%progbits
 528              		.align	1
 529              		.global	MX_TIM1_Init
 530              		.syntax unified
 531              		.thumb
 532              		.thumb_func
 533              		.fpu fpv4-sp-d16
 535              	MX_TIM1_Init:
 536              	.LFB130:
  34:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 537              		.loc 1 34 0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 88
 540              		@ frame_needed = 0, uses_anonymous_args = 0
 541 0000 10B5     		push	{r4, lr}
 542              	.LCFI17:
 543              		.cfi_def_cfa_offset 8
 544              		.cfi_offset 4, -8
 545              		.cfi_offset 14, -4
 546 0002 96B0     		sub	sp, sp, #88
 547              	.LCFI18:
 548              		.cfi_def_cfa_offset 96
  35:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 549              		.loc 1 35 0
 550 0004 0024     		movs	r4, #0
 551 0006 1294     		str	r4, [sp, #72]
 552 0008 1394     		str	r4, [sp, #76]
 553 000a 1494     		str	r4, [sp, #80]
 554 000c 1594     		str	r4, [sp, #84]
  36:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC = {0};
 555              		.loc 1 36 0
 556 000e 1094     		str	r4, [sp, #64]
 557 0010 1194     		str	r4, [sp, #68]
  37:Src/tim.c     ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 558              		.loc 1 37 0
 559 0012 0994     		str	r4, [sp, #36]
 560 0014 0A94     		str	r4, [sp, #40]
 561 0016 0B94     		str	r4, [sp, #44]
 562 0018 0C94     		str	r4, [sp, #48]
 563 001a 0D94     		str	r4, [sp, #52]
 564 001c 0E94     		str	r4, [sp, #56]
 565 001e 0F94     		str	r4, [sp, #60]
  38:Src/tim.c     **** 
 566              		.loc 1 38 0
 567 0020 2022     		movs	r2, #32
 568 0022 2146     		mov	r1, r4
 569 0024 01A8     		add	r0, sp, #4
 570 0026 FFF7FEFF 		bl	memset
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s 			page 16


 571              	.LVL34:
  40:Src/tim.c     ****   htim1.Init.Prescaler = 71;
 572              		.loc 1 40 0
 573 002a 3748     		ldr	r0, .L59
 574 002c 374B     		ldr	r3, .L59+4
 575 002e 0360     		str	r3, [r0]
  41:Src/tim.c     ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 576              		.loc 1 41 0
 577 0030 4723     		movs	r3, #71
 578 0032 4360     		str	r3, [r0, #4]
  42:Src/tim.c     ****   htim1.Init.Period = 62;
 579              		.loc 1 42 0
 580 0034 8460     		str	r4, [r0, #8]
  43:Src/tim.c     ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 581              		.loc 1 43 0
 582 0036 3E23     		movs	r3, #62
 583 0038 C360     		str	r3, [r0, #12]
  44:Src/tim.c     ****   htim1.Init.RepetitionCounter = 0;
 584              		.loc 1 44 0
 585 003a 0461     		str	r4, [r0, #16]
  45:Src/tim.c     ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 586              		.loc 1 45 0
 587 003c 4461     		str	r4, [r0, #20]
  46:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 588              		.loc 1 46 0
 589 003e 8023     		movs	r3, #128
 590 0040 8361     		str	r3, [r0, #24]
  47:Src/tim.c     ****   {
 591              		.loc 1 47 0
 592 0042 FFF7FEFF 		bl	HAL_TIM_Base_Init
 593              	.LVL35:
 594 0046 0028     		cmp	r0, #0
 595 0048 46D1     		bne	.L51
 596              	.L42:
  51:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 597              		.loc 1 51 0
 598 004a 16A9     		add	r1, sp, #88
 599 004c 4FF48053 		mov	r3, #4096
 600 0050 41F8103D 		str	r3, [r1, #-16]!
  52:Src/tim.c     ****   {
 601              		.loc 1 52 0
 602 0054 2C48     		ldr	r0, .L59
 603 0056 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 604              	.LVL36:
 605 005a 0028     		cmp	r0, #0
 606 005c 3FD1     		bne	.L52
 607              	.L43:
  56:Src/tim.c     ****   {
 608              		.loc 1 56 0
 609 005e 2A48     		ldr	r0, .L59
 610 0060 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 611              	.LVL37:
 612 0064 0028     		cmp	r0, #0
 613 0066 3DD1     		bne	.L53
 614              	.L44:
  60:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 615              		.loc 1 60 0
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s 			page 17


 616 0068 0023     		movs	r3, #0
 617 006a 1093     		str	r3, [sp, #64]
  61:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 618              		.loc 1 61 0
 619 006c 1193     		str	r3, [sp, #68]
  62:Src/tim.c     ****   {
 620              		.loc 1 62 0
 621 006e 10A9     		add	r1, sp, #64
 622 0070 2548     		ldr	r0, .L59
 623 0072 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 624              	.LVL38:
 625 0076 0028     		cmp	r0, #0
 626 0078 37D1     		bne	.L54
 627              	.L45:
  66:Src/tim.c     ****   sConfigOC.Pulse = 0;
 628              		.loc 1 66 0
 629 007a 6023     		movs	r3, #96
 630 007c 0993     		str	r3, [sp, #36]
  67:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 631              		.loc 1 67 0
 632 007e 0022     		movs	r2, #0
 633 0080 0A92     		str	r2, [sp, #40]
  68:Src/tim.c     ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 634              		.loc 1 68 0
 635 0082 0B92     		str	r2, [sp, #44]
  69:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 636              		.loc 1 69 0
 637 0084 0C92     		str	r2, [sp, #48]
  70:Src/tim.c     ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 638              		.loc 1 70 0
 639 0086 0D92     		str	r2, [sp, #52]
  71:Src/tim.c     ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 640              		.loc 1 71 0
 641 0088 0E92     		str	r2, [sp, #56]
  72:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 642              		.loc 1 72 0
 643 008a 0F92     		str	r2, [sp, #60]
  73:Src/tim.c     ****   {
 644              		.loc 1 73 0
 645 008c 09A9     		add	r1, sp, #36
 646 008e 1E48     		ldr	r0, .L59
 647 0090 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 648              	.LVL39:
 649 0094 60BB     		cbnz	r0, .L55
 650              	.L46:
  77:Src/tim.c     ****   {
 651              		.loc 1 77 0
 652 0096 0422     		movs	r2, #4
 653 0098 09A9     		add	r1, sp, #36
 654 009a 1B48     		ldr	r0, .L59
 655 009c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 656              	.LVL40:
 657 00a0 48BB     		cbnz	r0, .L56
 658              	.L47:
  81:Src/tim.c     ****   {
 659              		.loc 1 81 0
 660 00a2 0822     		movs	r2, #8
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s 			page 18


 661 00a4 09A9     		add	r1, sp, #36
 662 00a6 1848     		ldr	r0, .L59
 663 00a8 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 664              	.LVL41:
 665 00ac 30BB     		cbnz	r0, .L57
 666              	.L48:
  85:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 667              		.loc 1 85 0
 668 00ae 0023     		movs	r3, #0
 669 00b0 0193     		str	r3, [sp, #4]
  86:Src/tim.c     ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 670              		.loc 1 86 0
 671 00b2 0293     		str	r3, [sp, #8]
  87:Src/tim.c     ****   sBreakDeadTimeConfig.DeadTime = 2;
 672              		.loc 1 87 0
 673 00b4 0393     		str	r3, [sp, #12]
  88:Src/tim.c     ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 674              		.loc 1 88 0
 675 00b6 0222     		movs	r2, #2
 676 00b8 0492     		str	r2, [sp, #16]
  89:Src/tim.c     ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 677              		.loc 1 89 0
 678 00ba 0593     		str	r3, [sp, #20]
  90:Src/tim.c     ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 679              		.loc 1 90 0
 680 00bc 4FF40052 		mov	r2, #8192
 681 00c0 0692     		str	r2, [sp, #24]
  91:Src/tim.c     ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 682              		.loc 1 91 0
 683 00c2 0893     		str	r3, [sp, #32]
  92:Src/tim.c     ****   {
 684              		.loc 1 92 0
 685 00c4 01A9     		add	r1, sp, #4
 686 00c6 1048     		ldr	r0, .L59
 687 00c8 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 688              	.LVL42:
 689 00cc C8B9     		cbnz	r0, .L58
 690              	.L49:
  96:Src/tim.c     **** 
 691              		.loc 1 96 0
 692 00ce 0E48     		ldr	r0, .L59
 693 00d0 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 694              	.LVL43:
  98:Src/tim.c     **** /* TIM6 init function */
 695              		.loc 1 98 0
 696 00d4 16B0     		add	sp, sp, #88
 697              	.LCFI19:
 698              		.cfi_remember_state
 699              		.cfi_def_cfa_offset 8
 700              		@ sp needed
 701 00d6 10BD     		pop	{r4, pc}
 702              	.L51:
 703              	.LCFI20:
 704              		.cfi_restore_state
  49:Src/tim.c     ****   }
 705              		.loc 1 49 0
 706 00d8 FFF7FEFF 		bl	Error_Handler
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s 			page 19


 707              	.LVL44:
 708 00dc B5E7     		b	.L42
 709              	.L52:
  54:Src/tim.c     ****   }
 710              		.loc 1 54 0
 711 00de FFF7FEFF 		bl	Error_Handler
 712              	.LVL45:
 713 00e2 BCE7     		b	.L43
 714              	.L53:
  58:Src/tim.c     ****   }
 715              		.loc 1 58 0
 716 00e4 FFF7FEFF 		bl	Error_Handler
 717              	.LVL46:
 718 00e8 BEE7     		b	.L44
 719              	.L54:
  64:Src/tim.c     ****   }
 720              		.loc 1 64 0
 721 00ea FFF7FEFF 		bl	Error_Handler
 722              	.LVL47:
 723 00ee C4E7     		b	.L45
 724              	.L55:
  75:Src/tim.c     ****   }
 725              		.loc 1 75 0
 726 00f0 FFF7FEFF 		bl	Error_Handler
 727              	.LVL48:
 728 00f4 CFE7     		b	.L46
 729              	.L56:
  79:Src/tim.c     ****   }
 730              		.loc 1 79 0
 731 00f6 FFF7FEFF 		bl	Error_Handler
 732              	.LVL49:
 733 00fa D2E7     		b	.L47
 734              	.L57:
  83:Src/tim.c     ****   }
 735              		.loc 1 83 0
 736 00fc FFF7FEFF 		bl	Error_Handler
 737              	.LVL50:
 738 0100 D5E7     		b	.L48
 739              	.L58:
  94:Src/tim.c     ****   }
 740              		.loc 1 94 0
 741 0102 FFF7FEFF 		bl	Error_Handler
 742              	.LVL51:
 743 0106 E2E7     		b	.L49
 744              	.L60:
 745              		.align	2
 746              	.L59:
 747 0108 00000000 		.word	htim1
 748 010c 00000140 		.word	1073807360
 749              		.cfi_endproc
 750              	.LFE130:
 752              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 753              		.align	1
 754              		.global	HAL_TIM_Base_MspDeInit
 755              		.syntax unified
 756              		.thumb
 757              		.thumb_func
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s 			page 20


 758              		.fpu fpv4-sp-d16
 760              	HAL_TIM_Base_MspDeInit:
 761              	.LFB136:
 264:Src/tim.c     **** 
 265:Src/tim.c     **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 266:Src/tim.c     **** {
 762              		.loc 1 266 0
 763              		.cfi_startproc
 764              		@ args = 0, pretend = 0, frame = 0
 765              		@ frame_needed = 0, uses_anonymous_args = 0
 766              	.LVL52:
 767 0000 08B5     		push	{r3, lr}
 768              	.LCFI21:
 769              		.cfi_def_cfa_offset 8
 770              		.cfi_offset 3, -8
 771              		.cfi_offset 14, -4
 267:Src/tim.c     **** 
 268:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM1)
 772              		.loc 1 268 0
 773 0002 0368     		ldr	r3, [r0]
 774 0004 174A     		ldr	r2, .L71
 775 0006 9342     		cmp	r3, r2
 776 0008 09D0     		beq	.L67
 269:Src/tim.c     ****   {
 270:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 0 */
 271:Src/tim.c     **** 
 272:Src/tim.c     ****   /* USER CODE END TIM1_MspDeInit 0 */
 273:Src/tim.c     ****     /* Peripheral clock disable */
 274:Src/tim.c     ****     __HAL_RCC_TIM1_CLK_DISABLE();
 275:Src/tim.c     **** 
 276:Src/tim.c     ****     /* TIM1 interrupt Deinit */
 277:Src/tim.c     ****   /* USER CODE BEGIN TIM1:TIM1_UP_TIM10_IRQn disable */
 278:Src/tim.c     ****     /**
 279:Src/tim.c     ****     * Uncomment the line below to disable the "TIM1_UP_TIM10_IRQn" interrupt
 280:Src/tim.c     ****     * Be aware, disabling shared interrupt may affect other IPs
 281:Src/tim.c     ****     */
 282:Src/tim.c     ****     /* HAL_NVIC_DisableIRQ(TIM1_UP_TIM10_IRQn); */
 283:Src/tim.c     ****   /* USER CODE END TIM1:TIM1_UP_TIM10_IRQn disable */
 284:Src/tim.c     **** 
 285:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 286:Src/tim.c     **** 
 287:Src/tim.c     ****   /* USER CODE END TIM1_MspDeInit 1 */
 288:Src/tim.c     ****   }
 289:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM6)
 777              		.loc 1 289 0
 778 000a 174A     		ldr	r2, .L71+4
 779 000c 9342     		cmp	r3, r2
 780 000e 0DD0     		beq	.L68
 290:Src/tim.c     ****   {
 291:Src/tim.c     ****   /* USER CODE BEGIN TIM6_MspDeInit 0 */
 292:Src/tim.c     **** 
 293:Src/tim.c     ****   /* USER CODE END TIM6_MspDeInit 0 */
 294:Src/tim.c     ****     /* Peripheral clock disable */
 295:Src/tim.c     ****     __HAL_RCC_TIM6_CLK_DISABLE();
 296:Src/tim.c     **** 
 297:Src/tim.c     ****     /* TIM6 interrupt Deinit */
 298:Src/tim.c     ****     HAL_NVIC_DisableIRQ(TIM6_DAC_IRQn);
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s 			page 21


 299:Src/tim.c     ****   /* USER CODE BEGIN TIM6_MspDeInit 1 */
 300:Src/tim.c     **** 
 301:Src/tim.c     ****   /* USER CODE END TIM6_MspDeInit 1 */
 302:Src/tim.c     ****   }
 303:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM7)
 781              		.loc 1 303 0
 782 0010 164A     		ldr	r2, .L71+8
 783 0012 9342     		cmp	r3, r2
 784 0014 14D0     		beq	.L69
 304:Src/tim.c     ****   {
 305:Src/tim.c     ****   /* USER CODE BEGIN TIM7_MspDeInit 0 */
 306:Src/tim.c     **** 
 307:Src/tim.c     ****   /* USER CODE END TIM7_MspDeInit 0 */
 308:Src/tim.c     ****     /* Peripheral clock disable */
 309:Src/tim.c     ****     __HAL_RCC_TIM7_CLK_DISABLE();
 310:Src/tim.c     **** 
 311:Src/tim.c     ****     /* TIM7 interrupt Deinit */
 312:Src/tim.c     ****     HAL_NVIC_DisableIRQ(TIM7_IRQn);
 313:Src/tim.c     ****   /* USER CODE BEGIN TIM7_MspDeInit 1 */
 314:Src/tim.c     **** 
 315:Src/tim.c     ****   /* USER CODE END TIM7_MspDeInit 1 */
 316:Src/tim.c     ****   }
 317:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM10)
 785              		.loc 1 317 0
 786 0016 164A     		ldr	r2, .L71+12
 787 0018 9342     		cmp	r3, r2
 788 001a 1BD0     		beq	.L70
 789              	.L61:
 790 001c 08BD     		pop	{r3, pc}
 791              	.L67:
 274:Src/tim.c     **** 
 792              		.loc 1 274 0
 793 001e 02F59C32 		add	r2, r2, #79872
 794 0022 536C     		ldr	r3, [r2, #68]
 795 0024 23F00103 		bic	r3, r3, #1
 796 0028 5364     		str	r3, [r2, #68]
 797 002a 08BD     		pop	{r3, pc}
 798              	.L68:
 295:Src/tim.c     **** 
 799              		.loc 1 295 0
 800 002c 02F50A32 		add	r2, r2, #141312
 801 0030 136C     		ldr	r3, [r2, #64]
 802 0032 23F01003 		bic	r3, r3, #16
 803 0036 1364     		str	r3, [r2, #64]
 298:Src/tim.c     ****   /* USER CODE BEGIN TIM6_MspDeInit 1 */
 804              		.loc 1 298 0
 805 0038 3620     		movs	r0, #54
 806              	.LVL53:
 807 003a FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 808              	.LVL54:
 809 003e 08BD     		pop	{r3, pc}
 810              	.LVL55:
 811              	.L69:
 309:Src/tim.c     **** 
 812              		.loc 1 309 0
 813 0040 02F50932 		add	r2, r2, #140288
 814 0044 136C     		ldr	r3, [r2, #64]
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s 			page 22


 815 0046 23F02003 		bic	r3, r3, #32
 816 004a 1364     		str	r3, [r2, #64]
 312:Src/tim.c     ****   /* USER CODE BEGIN TIM7_MspDeInit 1 */
 817              		.loc 1 312 0
 818 004c 3720     		movs	r0, #55
 819              	.LVL56:
 820 004e FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 821              	.LVL57:
 822 0052 08BD     		pop	{r3, pc}
 823              	.LVL58:
 824              	.L70:
 318:Src/tim.c     ****   {
 319:Src/tim.c     ****   /* USER CODE BEGIN TIM10_MspDeInit 0 */
 320:Src/tim.c     **** 
 321:Src/tim.c     ****   /* USER CODE END TIM10_MspDeInit 0 */
 322:Src/tim.c     ****     /* Peripheral clock disable */
 323:Src/tim.c     ****     __HAL_RCC_TIM10_CLK_DISABLE();
 825              		.loc 1 323 0
 826 0054 02F57442 		add	r2, r2, #62464
 827 0058 536C     		ldr	r3, [r2, #68]
 828 005a 23F40033 		bic	r3, r3, #131072
 829 005e 5364     		str	r3, [r2, #68]
 324:Src/tim.c     **** 
 325:Src/tim.c     ****     /* TIM10 interrupt Deinit */
 326:Src/tim.c     ****   /* USER CODE BEGIN TIM10:TIM1_UP_TIM10_IRQn disable */
 327:Src/tim.c     ****     /**
 328:Src/tim.c     ****     * Uncomment the line below to disable the "TIM1_UP_TIM10_IRQn" interrupt
 329:Src/tim.c     ****     * Be aware, disabling shared interrupt may affect other IPs
 330:Src/tim.c     ****     */
 331:Src/tim.c     ****     /* HAL_NVIC_DisableIRQ(TIM1_UP_TIM10_IRQn); */
 332:Src/tim.c     ****   /* USER CODE END TIM10:TIM1_UP_TIM10_IRQn disable */
 333:Src/tim.c     **** 
 334:Src/tim.c     ****   /* USER CODE BEGIN TIM10_MspDeInit 1 */
 335:Src/tim.c     **** 
 336:Src/tim.c     ****   /* USER CODE END TIM10_MspDeInit 1 */
 337:Src/tim.c     ****   }
 338:Src/tim.c     **** }
 830              		.loc 1 338 0
 831 0060 DCE7     		b	.L61
 832              	.L72:
 833 0062 00BF     		.align	2
 834              	.L71:
 835 0064 00000140 		.word	1073807360
 836 0068 00100040 		.word	1073745920
 837 006c 00140040 		.word	1073746944
 838 0070 00440140 		.word	1073824768
 839              		.cfi_endproc
 840              	.LFE136:
 842              		.comm	htim10,64,4
 843              		.comm	htim7,64,4
 844              		.comm	htim6,64,4
 845              		.comm	htim1,64,4
 846              		.text
 847              	.Letext0:
 848              		.file 2 "/Users/geekzjk/opt/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/machine/_defa
 849              		.file 3 "/Users/geekzjk/opt/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/_stdint.h
 850              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s 			page 23


 851              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 852              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 853              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 854              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 855              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 856              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 857              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 858              		.file 12 "Inc/tim.h"
 859              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 860              		.file 14 "Inc/main.h"
 861              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
ARM GAS  /var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s:18     .text.MX_TIM6_Init:0000000000000000 $t
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s:25     .text.MX_TIM6_Init:0000000000000000 MX_TIM6_Init
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s:98     .text.MX_TIM6_Init:000000000000004c $d
                            *COM*:0000000000000040 htim6
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s:104    .text.MX_TIM7_Init:0000000000000000 $t
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s:111    .text.MX_TIM7_Init:0000000000000000 MX_TIM7_Init
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s:183    .text.MX_TIM7_Init:0000000000000048 $d
                            *COM*:0000000000000040 htim7
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s:189    .text.MX_TIM10_Init:0000000000000000 $t
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s:196    .text.MX_TIM10_Init:0000000000000000 MX_TIM10_Init
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s:240    .text.MX_TIM10_Init:000000000000002c $d
                            *COM*:0000000000000040 htim10
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s:246    .text.HAL_TIM_Base_MspInit:0000000000000000 $t
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s:253    .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s:403    .text.HAL_TIM_Base_MspInit:00000000000000c4 $d
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s:412    .text.HAL_TIM_MspPostInit:0000000000000000 $t
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s:419    .text.HAL_TIM_MspPostInit:0000000000000000 HAL_TIM_MspPostInit
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s:521    .text.HAL_TIM_MspPostInit:0000000000000078 $d
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s:528    .text.MX_TIM1_Init:0000000000000000 $t
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s:535    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s:747    .text.MX_TIM1_Init:0000000000000108 $d
                            *COM*:0000000000000040 htim1
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s:753    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s:760    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
/var/folders/kp/233_yh1j2dd9gvn3v4mq48f40000gn/T//ccvmZOCr.s:835    .text.HAL_TIM_Base_MspDeInit:0000000000000064 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_TIM_Base_Init
HAL_TIMEx_MasterConfigSynchronization
Error_Handler
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_Init
memset
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_NVIC_DisableIRQ
